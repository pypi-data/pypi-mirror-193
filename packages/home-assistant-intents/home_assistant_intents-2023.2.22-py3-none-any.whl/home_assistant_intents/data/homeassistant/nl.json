{
  "language": "nl",
  "intents": {
    "HassTurnOff": {
      "data": [
        {
          "sentences": [
            "[<doe>|<zou>] [alle] <ventilator> [<naar>] uit [willen|kunnen] [<doe>] in <area>",
            "[<doe>|<zou>] [alle] <ventilator> [in|op] <area> [<naar>] uit [willen|kunnen] [<doe>]",
            "[<doe>|<zou>] [(alle|in)] <area> <ventilator> [<naar>] uit [willen|kunnen] [<doe>]",
            "[<zou>] [(alle|in)] [<area>[ ]]<ventilator> [[in|op] <area>] [willen|kunnen] (uit[ ]zetten|uitschakelen)"
          ],
          "response": "fans_area",
          "slots": {
            "domain": "fan",
            "name": "all"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] ((overal|alle) <ventilator>|<ventilator> overal) uit [willen|kunnen] [<doe>]"
          ],
          "response": "fan_all",
          "slots": {
            "domain": "fan",
            "area": "all",
            "name": "all"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] <name>[ ][<type>] [<naar>] uit [willen|kunnen] [<doe>]",
            "[<zou>] <name>[ ][<type>] [willen|kunnen] (uit[ ]zetten|uitschakelen)"
          ],
          "excludes_context": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] [alle] <lamp> [<naar>] uit [willen|kunnen] [<doe>] in <area>",
            "[<doe>|<zou>] [alle] <lamp> [in|op] <area> [<naar>] uit [willen|kunnen] [<doe>]",
            "[<doe>|<zou>] [(alle|in)] <area>[ ]<lamp> [<naar>] uit [willen|kunnen] [<doe>]",
            "[<zou>] [(alle|in)] [<area>[ ]]<lamp> [[in|op] <area>] [willen|kunnen] (uit[ ]zetten|uitschakelen)"
          ],
          "response": "lights_area",
          "slots": {
            "domain": "light",
            "name": "all"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] ((overal|alle) <lamp>|<lamp> overal) uit [willen|kunnen] [<doe>]"
          ],
          "response": "light_all",
          "slots": {
            "domain": "light",
            "area": "all",
            "name": "all"
          }
        },
        {
          "sentences": [
            "sluit <name>",
            "[<doe>|<zou>] <name> <dicht> [willen|kunnen] [<doe>]"
          ],
          "response": "cover",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit [de] garage[ ][deur]",
            "[<doe>|<zou>] [de] garage[ ][deur] dicht [willen|kunnen] [<doe>]"
          ],
          "response": "cover_device_class",
          "slots": {
            "device_class": "garage",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit <name> [in|op] <area>",
            "[<doe>|<zou>] <name> (<dicht> [in|op] <area>|[in|op] <area> <dicht>) [willen|kunnen] [<doe>]",
            "<zou> <name> [in|op] <area> (willen|kunnen) [<dicht>]"
          ],
          "response": "cover_area",
          "slots": {
            "device_class": [
              "blind",
              "curtain",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit [de|het] <curtain> [in|op] <area>",
            "[<doe>|<zou>] [de|het] <curtain> (<dicht> [in|op] <area>|[in|op] <area> <dicht>) [willen|kunnen] [<doe>]",
            "<zou> [de|het] <curtain> [in|op] <area> [willen|kunnen] <dicht>"
          ],
          "response": "cover_area",
          "slots": {
            "device_class": "curtain",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "sluit [de|het] (<blind>|<shutter>|<shade>) [in|op] <area>",
            "[<doe>|<zou>] [de|het] (<blind>|<shutter>|<shade>) (<dicht> [in|op] <area>|[in|op] <area> <dicht>) [willen|kunnen] [<doe>]",
            "<zou> [de|het] (<blind>|<shutter>|<shade>) [in|op] <area> [willen|kunnen] <dicht>"
          ],
          "response": "cover_area",
          "slots": {
            "device_class": [
              "blind",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        }
      ]
    },
    "HassGetState": {
      "data": [
        {
          "sentences": [
            "Wat is [in <area>] de [huidige] [(status|staat|stand) van] <name>[ ][<type>] [in <area>]"
          ],
          "response": "one"
        },
        {
          "sentences": [
            "(Is|Staat) [in <area>] [de [huidige] [(status|staat|stand) van]] <name>[ ][<type>] [in <area>] [op] {on_off_states:state} [in <area>]"
          ],
          "response": "one_yesno",
          "excludes_context": {
            "domain": [
              "cover"
            ]
          }
        },
        {
          "sentences": [
            "(is|zijn|staat|staan) er [in <area>] {on_off_domains:domain} [in <area>] {on_off_states:state} [in <area>]"
          ],
          "response": "any"
        },
        {
          "sentences": [
            "(Zijn|Is|Staan|Staat) [in <area>] [alle] {on_off_domains:domain} [in <area>] {on_off_states:state} [in <area>]"
          ],
          "response": "all"
        },
        {
          "sentences": [
            "Welke {on_off_domains:domain} [in <area>] (zijn|is|staan|staat) [in <area>] {on_off_states:state} [in <area>]"
          ],
          "response": "which"
        },
        {
          "sentences": [
            "Hoe[ ]veel {on_off_domains:domain} (zijn|is|staan|staat) [er] [in <area>] {on_off_states:state} [in <area>]"
          ],
          "response": "how_many"
        },
        {
          "sentences": [
            "(Is|Staat) [in <area>] <name> [in <area>] {cover_states:state} [in <area>]"
          ],
          "response": "one_yesno",
          "requires_context": {
            "domain": "cover"
          },
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "(Is|Zijn|Staan|Staat) [er] [in <area>|ergens|nog] [een] {cover_classes:device_class} [in <area>] {cover_states:state} [in <area>]"
          ],
          "response": "any",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Zijn [in <area>] [alle|de] {cover_classes:device_class} [in <area>] {cover_states:state} [in <area>]"
          ],
          "response": "all",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Welk[e] {cover_classes:device_class} [in <area>] (is|zijn) {cover_states:state} [in <area>]"
          ],
          "response": "which",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "Hoe[ ]veel {cover_classes:device_class} [in <area>] (is|zijn) [er] [in <area>] {cover_states:state} [in <area>]"
          ],
          "response": "how_many",
          "slots": {
            "domain": "cover"
          }
        }
      ]
    },
    "HassTurnOn": {
      "data": [
        {
          "sentences": [
            "[<doe>|<zou>] [alle] <lamp> [<naar>] aan [willen|kunnen] [<doe>] (in|op) <area>",
            "Schakel [alle] <lamp> [<naar>] in (in|op) <area>",
            "[<doe>|<zou>] [alle] <lamp> [in|op] <area> [<naar>] aan [willen|kunnen] [<doe>]",
            "Schakel [alle] <lamp> [in|op] <area> in",
            "[<doe>|<zou>] [(alle|in)] <area>[ ]<lamp> aan [willen|kunnen] [<doe>]",
            "Schakel [(alle|in)] <area>[ ]<lamp> in",
            "[<zou>] [(alle|in)] [<area>[ ]]<lamp> [[in|op] <area>] [willen|kunnen] (aan[ ]zetten|inschakelen)"
          ],
          "response": "lights_area",
          "slots": {
            "domain": "light",
            "name": "all"
          }
        },
        {
          "sentences": [
            "open <name>",
            "[<doe>|<zou>] <name> <open> [willen|kunnen] [<doe>]"
          ],
          "response": "cover",
          "slots": {
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open [de] garage[ ][deur]",
            "[<doe>|<zou>] [de] garage[ ][deur] [<open>] [willen|kunnen] [<doe>]"
          ],
          "response": "cover_device_class",
          "slots": {
            "device_class": "garage",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open <name> [in|op] <area>",
            "[<doe> |<zou> ]<name> (<open> [in|op] <area>|[in|op] <area> <open>) [willen|kunnen] [<doe>]",
            "<zou> <name> [in|op] <area> (willen|kunnen) <open>"
          ],
          "response": "cover",
          "slots": {
            "device_class": [
              "blind",
              "curtain",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open [de|het] <curtain> [in|op] <area>",
            "[<doe>|<zou>] [de|het] <curtain> (<open> [in|op] <area>|[in|op] <area> <open>) [willen|kunnen] [<doe>]",
            "<zou> [de|het] <curtain> [in|op] <area> [willen|kunnen] <open>"
          ],
          "response": "cover_area",
          "slots": {
            "device_class": "curtain",
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "open [de|het] (<blind>|<shutter>|<shade>) [in|op] <area>",
            "[<doe>|<zou>] [de|het] (<blind>|<shutter>|<shade>) (<open> [in|op] <area>|[in|op] <area> <open>) [willen|kunnen] [<doe>]",
            "<zou> [de|het] (<blind>|<shutter>|<shade>) [in|op] <area> [willen|kunnen] <open>"
          ],
          "response": "cover_area",
          "slots": {
            "device_class": [
              "blind",
              "shutter",
              "shade"
            ],
            "domain": "cover"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] [alle] <ventilator> [<naar>] aan [willen|kunnen] [<doe>] in <area>",
            "Schakel [alle] <ventilator> [<naar>] in in <area>",
            "[<doe>|<zou>] [alle] <ventilator> [in|op] <area> [<naar>] aan [willen|kunnen] [<doe>]",
            "Schakel [alle] <ventilator> [in|op] <area> [<naar>] in",
            "[<doe>|<zou>] [(alle|in)] <area> <ventilator> [<naar>] aan [willen|kunnen] [<doe>]",
            "Schakel [(alle|in)] <area>[ ]<ventilator> [<naar>] in",
            "[<zou>] [(alle|in)] [<area>[ ]]<ventilator> [[in|op] <area>] [willen|kunnen] (aan[ ]zetten|inschakelen)"
          ],
          "response": "fans_area",
          "slots": {
            "domain": "fan",
            "name": "all"
          }
        },
        {
          "sentences": [
            "[<doe>|<zou>] <name>[ ][<type>] [<naar>] (aan|in) [willen|kunnen] [<doe>]",
            "schakel <name>[ ][<type>] [<naar>] in",
            "[<zou>] <name>[ ][<type>] [willen|kunnen] (aan[ ]zetten|inschakelen)"
          ],
          "excludes_context": {
            "domain": "cover"
          }
        }
      ]
    }
  },
  "responses": {
    "errors": {
      "no_intent": "Sorry, ik snap het niet",
      "no_area": "Kan geen {{ area }} vinden",
      "no_domain": "{{ area }} heeft geen {{ domain }}",
      "no_device_class": "{{ area }} heeft geen {{ device_class }}",
      "no_entity": "Kan {{ entity }} niet vinden",
      "handle_error": "Er is iets misgegaan"
    },
    "intents": {
      "HassGetState": {
        "one": "{{ slots.name | capitalize }} is {{ state.state_with_unit }}\n",
        "one_yesno": "{% if query.matched %}\n  Ja\n{% else %}\n  Nee, die is {{ state.state_with_unit }}\n{% endif %}\n",
        "any": "{% if query.matched %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    Ja, {{ match[:3] | join(\", \") }} en nog {{ (match | length - 3) }}\n  {%- else -%}\n    Ja,\n    {% for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} en {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% else %}\n  Nee\n{% endif %}\n",
        "all": "{% if not query.unmatched: %}\n  Ja\n{% else %}\n  {% set no_match = query.unmatched | map(attribute=\"name\") | sort | list %}\n  {% if no_match | length > 4 %}\n    Nee, {{ no_match[:3] | join(\", \") }} en nog {{ (no_match | length - 3) }} niet\n  {%- else -%}\n    Nee,\n    {% for name in no_match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} en {% endif -%}\n      {{ name }}\n    {%- endfor %} niet\n  {% endif %}\n{% endif %}\n",
        "which": "{% if not query.matched %}\n  Geen\n{% else %}\n  {% set match = query.matched | map(attribute=\"name\") | sort | list %}\n  {% if match | length > 4 %}\n    {{ match[:3] | join(\", \") }} en nog {{ (match | length - 3) }}\n  {% else %}\n    {%- for name in match -%}\n      {% if not loop.first and not loop.last %}, {% elif loop.last and not loop.first %} en {% endif -%}\n      {{ name }}\n    {%- endfor -%}\n  {% endif %}\n{% endif %}\n",
        "how_many": "{{ query.matched | length }}\n"
      },
      "HassTurnOff": {
        "default": "{{ slots.name | capitalize }} uitgezet",
        "lights_area": "De {{ slots.area }}verlichting is uitgezet",
        "fans_area": "De ventilatoren in {{ slots.area }} zijn uitgezet",
        "cover": "{{ slots.name | capitalize }} gesloten",
        "cover_area": "{{ slots.area | capitalize }} gesloten",
        "light_all": "Alle lampen uitgezet",
        "fan_all": "Alle ventilatoren uitgezet",
        "cover_device_class": "{{ slots.device_class | capitalize }} gesloten"
      },
      "HassTurnOn": {
        "default": "{{ slots.name | capitalize }} aangezet",
        "lights_area": "De {{ slots.area | trim }}verlichting is aangezet",
        "fans_area": "De ventilatoren in {{ slots.area }} zijn aangezet",
        "cover": "{{ slots.name | capitalize }} geopend",
        "cover_area": "{{ slots.area | capitalize }} geopend",
        "light_all": "Alle lampen aangezet",
        "fan_all": "Alle ventilatoren aangezet",
        "cover_device_class": "{{ slots.device_class | capitalize }} geopend"
      }
    }
  },
  "lists": {
    "brightness": {
      "range": {
        "type": "percentage",
        "from": 0,
        "to": 100
      }
    },
    "brightness_level": {
      "values": [
        {
          "in": "(max|maximum|maximaal|hoogst[e])",
          "out": 100
        },
        {
          "in": "(min|minimum|minimaal|laagst[e])",
          "out": 1
        }
      ]
    },
    "color": {
      "values": [
        {
          "in": "wit",
          "out": "white"
        },
        {
          "in": "zwart",
          "out": "black"
        },
        {
          "in": "rood",
          "out": "red"
        },
        {
          "in": "oranje",
          "out": "orange"
        },
        {
          "in": "geel",
          "out": "yellow"
        },
        {
          "in": "groen",
          "out": "green"
        },
        {
          "in": "blauw",
          "out": "blue"
        },
        {
          "in": "paars",
          "out": "purple"
        },
        {
          "in": "bruin",
          "out": "brown"
        },
        {
          "in": "roze",
          "out": "pink"
        }
      ]
    },
    "temperature": {
      "range": {
        "type": "temperature",
        "from": 0,
        "to": 100
      }
    },
    "temperature_unit": {
      "values": [
        "celsius",
        {
          "in": "c",
          "out": "celsius"
        },
        "fahrenheit",
        {
          "in": "f",
          "out": "fahrenheit"
        }
      ]
    },
    "on_off_states": {
      "values": [
        {
          "in": "aan",
          "out": "on"
        },
        {
          "in": "uit",
          "out": "off"
        }
      ]
    },
    "on_off_domains": {
      "values": [
        {
          "in": "<lamp>",
          "out": "light"
        },
        {
          "in": "<ventilator>",
          "out": "fan"
        },
        {
          "in": "<schakelaar>",
          "out": "switch"
        }
      ]
    },
    "cover_states": {
      "values": [
        {
          "in": "(open|geopend)",
          "out": "open"
        },
        {
          "in": "(dicht|gesloten)",
          "out": "closed"
        },
        {
          "in": "(open aan het gaan|aan het (openen|open gaan))",
          "out": "opening"
        },
        {
          "in": "(dicht aan het gaan|aan het (dicht gaan|sluiten))",
          "out": "closing"
        }
      ]
    },
    "cover_classes": {
      "values": [
        {
          "in": "<awning>",
          "out": "awning"
        },
        {
          "in": "<blind>",
          "out": "blind"
        },
        {
          "in": "<curtain>",
          "out": "curtain"
        },
        {
          "in": "<door>",
          "out": "door"
        },
        {
          "in": "<garage>",
          "out": "garage"
        },
        {
          "in": "<gate>",
          "out": "gate"
        },
        {
          "in": "<shade>",
          "out": "shade"
        },
        {
          "in": "<shutter>",
          "out": "shutter"
        },
        {
          "in": "<window>",
          "out": "window"
        }
      ]
    }
  },
  "expansion_rules": {
    "lamp": "[de|het|een] (lamp[en]|licht[en]|verlichting)",
    "ventilator": "[de|een] (ventilator[s|en]|fan[s])",
    "schakelaar": "[de|een] (schakelaar[s]|switch[es]|plug[gen])",
    "awning": "(luifel[s]|[zonne]scherm[en])",
    "blind": "(jaloezie[ën]|luxaflex)",
    "curtain": "(gordijn[en]|vitrage[s])",
    "door": "deur[en]",
    "garage": "garage[ ]deur[en]",
    "gate": "(hek[ken]|poort[en])",
    "shade": "(screen[s]|rolgordijn[en])",
    "shutter": "(rolluik[en]|shutter[s])",
    "window": "(raam|ramen)",
    "afdekking": "[de|het] (<awning>|<blind>|<curtain>|<door>|<garage>|<gate>|<shade>|<shutter>|<window>)",
    "type": "(<lamp>|<ventilator>|<afdekking>|<schakelaar>)",
    "name": "[de|het] {name}",
    "area": "[de|het] {area}",
    "doe": "(zet[ten]|mag|mogen|doe[n]|verander[en]|maak|maken|schakel[en])",
    "zou": "(kan|kun[t]|zal|zou) [je|jij|u]",
    "naar": "(naar|op)",
    "helderheid": "[de] (helderheid|felheid|intensiteit|lichtsterkte)",
    "brightness": "{brightness}[%|procent]",
    "temperature": "{temperature}[°|graden] [{temperature_unit}]",
    "warm": "(warm|heet|koud|koel)",
    "open": "(open[en]|omhoog|naar boven|opwaarts)",
    "dicht": "(dicht|omlaag|naar beneden|sluiten|neerwaarts)"
  },
  "skip_words": [
    "alstublieft",
    "alsjeblieft",
    "aub",
    "ajb",
    "graag"
  ]
}