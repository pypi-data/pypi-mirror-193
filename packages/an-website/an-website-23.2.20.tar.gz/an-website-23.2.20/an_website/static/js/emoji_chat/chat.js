"use strict";// @license magnet:?xt=urn:btih:0b31508aeb0634b347b8270c7bee4d411b5d4109&dn=agpl-3.0.txt AGPL-3.0-or-later
(()=>{const s=elById("message-input"),g=s.form,p=elById("message-section"),i=elById("open-moji-attribution"),r=elById("connection-state"),u=elById("current-user");let o=100,a=0,l="";const M=e=>new Date(e+16510752e5).toLocaleString(),b=e=>{const t=document.createElement("div");if(i&&i.getAttribute("type")!=="font"){for(const n of e.author)t.append(d(n));t.innerHTML+=": ";for(const n of e.content)t.append(d(n))}else t.innerText=`${e.author.join("")}: ${e.content.join("")}`;t.setAttribute("tooltip",M(e.timestamp)),p.append(t)},y=e=>{if(u.innerHTML="",i&&i.getAttribute("type")!=="font"){for(const t of e)u.append(d(t));return}u.innerText=e.join("")},d=e=>{const t=[...e].map(k=>k.codePointAt(0).toString(16).padStart(4,"0")).join("-").toUpperCase(),n=document.createElement("img");return n.src=`/static/img/openmoji-svg-14.0/${t}.svg`,n.classList.add("emoji"),n.alt=e,n},f=()=>{l&&!s.value&&(s.value=l,l="")},c=e=>{let t;if(r.onclick=()=>{},e==="connecting")t="Versuche mit WebSocket zu verbinden";else if(e==="connected")t="Mit WebSocket verbunden!";else if(e==="disconnected")t="Verbindung getrennt. DrÃ¼cke hier um erneut zu versuchen.",r.onclick=()=>{a=0,o=500,r.onclick=()=>{},m()};else{console.error("invalid state",e);return}r.setAttribute("state",e),r.setAttribute("tooltip",t)},v=e=>{const t=JSON.parse(e.data);switch(t.type){case"messages":{p.innerText="";for(const n of t.messages)b(n);break}case"message":{b(t.message);break}case"init":{y(t.current_user),console.log("Connected as",t.current_user.join("")),c("connected"),o=100,a=0;break}case"users":{console.debug("Recieved users data",t.users);break}case"ratelimit":{f(),alert(`Retry after ${t["Retry-After"]} seconds.`);break}case"error":{f(),alert(t.error);break}default:console.error(`Invalid type ${t.type}`)}},m=()=>{c("connecting");const e=new WebSocket((window.location.protocol==="https:"?"wss:":"ws:")+`//${window.location.host}/websocket/emoji-chat`),t=setInterval(()=>e.send(""),1e4);e.onclose=n=>{if(g.onsubmit=()=>{},n.wasClean){console.debug(`Connection closed cleanly, code=${n.code} reason=${n.reason}`),c("disconnected");return}if(console.debug(`Connection closed, reconnecting in ${o}ms`),c("connecting"),clearInterval(t),a>20){c("disconnected");return}setTimeout(()=>{o=Math.max(500,Math.floor(Math.min(15e3,1.5*o-200))),a++,m()},o)},e.onopen=n=>console.debug("Opened WebSocket",n),e.onmessage=v,g.onsubmit=n=>{s.value!==""&&(l=s.value,e.send(JSON.stringify({type:"message",message:s.value})),s.value=""),n.preventDefault()}};m()})();// @license-end
//# sourceMappingURL=chat.js.map
