{"version":3,"file":"d7dca660.js","mappings":";;AAgDA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAKA;;;;;;;;AA+CA;ACpEA;AAEA;;;AAGA;;AAEA;;;AAGA;;;;AAIA;AAEA;;;AAKA;;AAEA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;;AAGA;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA","sources":["webpack://home-assistant-frontend/./src/components/ha-button-menu.ts","webpack://home-assistant-frontend/./src/panels/config/ha-config-aiszigbee.ts"],"sourcesContent":["import type { Button } from \"@material/mwc-button\";\nimport \"@material/mwc-menu\";\nimport type { Corner, Menu, MenuCorner } from \"@material/mwc-menu\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators\";\nimport { FOCUS_TARGET } from \"../dialogs/make-dialog-manager\";\nimport type { HaIconButton } from \"./ha-icon-button\";\n\n@customElement(\"ha-button-menu\")\nexport class HaButtonMenu extends LitElement {\n  protected readonly [FOCUS_TARGET];\n\n  @property() public corner: Corner = \"TOP_START\";\n\n  @property() public menuCorner: MenuCorner = \"START\";\n\n  @property({ type: Number }) public x: number | null = null;\n\n  @property({ type: Number }) public y: number | null = null;\n\n  @property({ type: Boolean }) public multi = false;\n\n  @property({ type: Boolean }) public activatable = false;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public fixed = false;\n\n  @query(\"mwc-menu\", true) private _menu?: Menu;\n\n  public get items() {\n    return this._menu?.items;\n  }\n\n  public get selected() {\n    return this._menu?.selected;\n  }\n\n  public override focus() {\n    if (this._menu?.open) {\n      this._menu.focusItemAtIndex(0);\n    } else {\n      this._triggerButton?.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div @click=${this._handleClick}>\n        <slot name=\"trigger\" @slotchange=${this._setTriggerAria}></slot>\n      </div>\n      <mwc-menu\n        .corner=${this.corner}\n        .menuCorner=${this.menuCorner}\n        .fixed=${this.fixed}\n        .multi=${this.multi}\n        .activatable=${this.activatable}\n        .y=${this.y}\n        .x=${this.x}\n      >\n        <slot></slot>\n      </mwc-menu>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n\n    if (document.dir === \"rtl\") {\n      this.updateComplete.then(() => {\n        this.querySelectorAll(\"mwc-list-item\").forEach((item) => {\n          const style = document.createElement(\"style\");\n          style.innerHTML =\n            \"span.material-icons:first-of-type { margin-left: var(--mdc-list-item-graphic-margin, 32px) !important; margin-right: 0px !important;}\";\n          item!.shadowRoot!.appendChild(style);\n        });\n      });\n    }\n  }\n\n  private _handleClick(): void {\n    if (this.disabled) {\n      return;\n    }\n    this._menu!.anchor = this;\n    this._menu!.show();\n  }\n\n  private get _triggerButton() {\n    return this.querySelector(\n      'ha-icon-button[slot=\"trigger\"], mwc-button[slot=\"trigger\"]'\n    ) as HaIconButton | Button | null;\n  }\n\n  private _setTriggerAria() {\n    if (this._triggerButton) {\n      this._triggerButton.ariaHasPopup = \"menu\";\n    }\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: inline-block;\n        position: relative;\n      }\n      ::slotted([disabled]) {\n        color: var(--disabled-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-button-menu\": HaButtonMenu;\n  }\n}\n","import \"@material/mwc-list/mwc-list-item\";\nimport \"../../components/ha-button-menu\";\nimport {\n  css,\n  CSSResultArray,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { mdiDotsVertical } from \"@mdi/js\";\nimport { loadTokens } from \"../../common/auth/token_storage\";\nimport \"../../layouts/hass-loading-screen\";\nimport \"../../layouts/hass-subpage\";\nimport \"../../components/ha-circular-progress\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { haStyle } from \"../../resources/styles\";\nimport { HomeAssistant, Route } from \"../../types\";\nimport \"../../components/ha-icon-button\";\nimport {\n  showAisFileDialog,\n  HaAisFileDialogParams,\n} from \"../../dialogs/ais-files/show-dialog-ais-file\";\n\n@customElement(\"ha-config-aiszigbee\")\nclass ConfigAisZigbee extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property() public route!: Route;\n\n  @property({ type: Boolean })\n  public narrow = false;\n\n  @property() private _access_token = \"\";\n\n  protected render(): TemplateResult {\n    const tokens = loadTokens();\n    this._access_token = tokens?.access_token || \"\";\n    const zigbee2mqtt = this.hass.states[\"sensor.status_serwisu_zigbee2mqtt\"];\n    if (zigbee2mqtt.state === \"online\") {\n      const iframe = html` <iframe\n        src=\"/api/zigbee2mqtt/${this._access_token}/\"\n      ></iframe>`;\n      return html`<hass-subpage header=\"Zigbee2Mqtt\" .narrow=${this.narrow}>\n        <ha-button-menu corner=\"BOTTOM_START\" slot=\"toolbar-icon\">\n          <mwc-icon-button slot=\"trigger\" alt=\"menu\">\n            <ha-svg-icon .path=${mdiDotsVertical}></ha-svg-icon>\n          </mwc-icon-button>\n          <mwc-list-item @click=${this._openZigbee2MqttFileConfig}>\n            Edit Zigbee2Mqtt configuration.yaml\n          </mwc-list-item>\n          <mwc-list-item @click=${this._restartZigbeeService}>\n            Restart zigbee sevice\n          </mwc-list-item>\n        </ha-button-menu>\n        ${iframe}\n      </hass-subpage>`;\n    }\n\n    return html`<hass-subpage header=\"Zigbee2Mqtt\" .narrow=${this.narrow}>\n      <ha-button-menu corner=\"BOTTOM_START\" slot=\"toolbar-icon\">\n        <mwc-icon-button slot=\"trigger\" alt=\"menu\">\n          <ha-svg-icon .path=${mdiDotsVertical}></ha-svg-icon>\n        </mwc-icon-button>\n        <mwc-list-item @click=${this._openZigbee2MqttFileConfig}>\n          Edit Zigbee2Mqtt configuration.yaml\n        </mwc-list-item>\n        <mwc-list-item @click=${this._restartZigbeeService}>\n          Restart Zigbee2Mqtt sevice\n        </mwc-list-item>\n      </ha-button-menu>\n      <div\n        style=\"width: 100%; height: 100%; display: flex; align-items: center;\"\n      >\n        <div style=\"width: 100%;\">\n          <p style=\"text-align: center;\">\n            <span class=\"text\"><b>BRAK POŁĄCZENIA Z ZIGBEE2MQTT</b></span>\n            <span class=\"icon\">\n              <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M8 2C6.9 2 6 2.9 6 4V12H5V16L9 20V22H15V20L19 16V12H18V4C18 2.9 17.11 2 16 2M8 4H16V12H8M9 7V9H11V7M13 7V9H15V7Z\"\n                />\n              </svg>\n            </span>\n            <br />\n          </p>\n          <svg\n            style=\"width:84px;height:84px;display:block;margin:auto;\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              fill=\"currentColor\"\n              d=\"M11.6 13V12.9L11.3 12.6H11.2L9.6 12C10 11.7 10.4 11.5 10.9 11.5C11.4 11.5 11.9 11.7 12.3 12.1C12.7 12.5 12.9 12.9 12.9 13.4C12.9 13.9 12.8 14.3 12.4 14.7L11.6 13M9.7 19.3C9.4 18.3 9.6 17.1 10.4 15.5L11.6 18.6C11.8 19.2 11.6 19.6 11 19.9C10.4 20.2 10 20 9.7 19.3M4.1 13.1C4.3 12.5 4.7 12.3 5.3 12.5L8.5 13.7C6.9 14.5 5.7 14.7 4.7 14.4C4.1 14.1 3.9 13.7 4.1 13.1M12 8.1H11V9.5H10.6C9.5 9.5 8.6 9.9 7.8 10.7L7.4 11.3L6 10.5C5.7 10.4 5.4 10.4 5 10.4C4.4 10.4 3.8 10.6 3.3 11S2.4 11.8 2.2 12.4C2 13.1 2 13.7 2.2 14.4C2.5 15.1 2.8 15.6 3.3 15.9C2.9 17.4 3.2 18.7 4.3 19.8C5.1 20.6 6 21 7.1 21C7.6 21 7.9 21 8.2 20.9C8.8 21.7 9.6 22.2 10.6 22.2C10.9 22.2 11.3 22.2 11.6 22.1C12.2 21.9 12.6 21.5 13 21C13.4 20.4 13.6 19.9 13.6 19.3C13.6 18.9 13.6 18.6 13.5 18.3L12.9 16.9L13.5 16.5C14.3 15.7 14.7 14.6 14.6 13.4H16V12.4H14.4C14 11.2 13.2 10.4 12 10V8.1M17.3 6.8C17.1 6.6 17 6.3 17 6.1C17 5.8 17.1 5.6 17.3 5.4C17.5 5.2 17.7 5.1 18 5.1S18.5 5.2 18.7 5.4C18.9 5.5 19 5.8 19 6.1C19 6.4 18.9 6.6 18.7 6.8C18.5 7 18.3 7 18 7S17.5 7 17.3 6.8M20.7 4.1H19.6L19.3 3.2C19.1 2.5 18.7 2.2 18 2.2C17.3 2.2 16.8 2.5 16.7 3.2L16.4 4.1H15.3C14.7 4.1 14.3 4.4 14 5C13.8 5.6 14 6.1 14.6 6.5L15.5 7L15.1 8.2C14.9 8.6 15 9 15.2 9.4C15.5 9.8 15.8 10 16.3 10C16.7 10 17 9.9 17.2 9.7L18 9.1L18.8 9.8C19 9.9 19.3 10 19.7 10C20.2 10 20.5 9.8 20.8 9.4C21 9 21.1 8.6 20.9 8.2L20.5 7L21.3 6.5C21.9 6.1 22.1 5.6 21.9 5C21.7 4.3 21.3 4.1 20.7 4.1Z\"\n            />\n          </svg>\n          <p style=\"text-align: center;\">\n            <span class=\"text\"\n              ><b\n                >usługa zigbee2mqtt jest\n                <span\n                  .onclick=\"${this.showZigbeeStatus}\"\n                  style=\"text-decoration: underline; cursor: pointer;\"\n                >\n                  <a> ${zigbee2mqtt.state} </a> </span\n                >, czekam na połączenie, to może potrwać kilka minut...</b\n              ></span\n            >\n            <br /><br />\n            <ha-circular-progress active></ha-circular-progress>\n            <br />\n            <br />\n            W razie problemów sprawdz logi, wpisując w\n            <a href=\"/developer-tools/console\">konsoli</a> komendę:\n            <b>pm2 logs</b><br />\n            Szczegóły w dokumentacji:\n            <a href=\"https://www.ai-speaker.com/docs/ais_app_integration_zigbee\"\n              >Integracja Zigbee2MQTT</a\n            >\n          </p>\n        </div>\n      </div>\n    </hass-subpage>`;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n  }\n\n  private showZigbeeStatus() {\n    fireEvent(this, \"hass-more-info\", {\n      entityId: \"sensor.status_serwisu_zigbee2mqtt\",\n    });\n  }\n\n  private async _openZigbee2MqttFileConfig() {\n    const filePath =\n      \"/data/data/com.termux/files/home/zigbee2mqtt/data/configuration.yaml\";\n    const file = await this.hass.callApi<string>(\"POST\", \"ais_file/read\", {\n      filePath: filePath,\n    });\n    const fileParams: HaAisFileDialogParams = {\n      dialogTitle: \"Zigbee2Mqtt configuration.yaml\",\n      filePath: filePath,\n      fileBody: file,\n      readonly: false,\n    };\n    showAisFileDialog(this, fileParams);\n  }\n\n  private async _restartZigbeeService() {\n    this.hass.callService(\"ais_shell_command\", \"restart_pm2_service\", {\n      service: \"zigbee\",\n    });\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyle,\n      css`\n        iframe {\n          display: block;\n          width: 100%;\n          height: 100%;\n          border: 0;\n        }\n        .header + iframe {\n          height: calc(100% - 40px);\n        }\n        .header {\n          display: flex;\n          align-items: center;\n          font-size: 16px;\n          height: 40px;\n          padding: 0 16px;\n          pointer-events: none;\n          background-color: var(--app-header-background-color);\n          font-weight: 400;\n          color: var(--app-header-text-color, white);\n          border-bottom: var(--app-header-border-bottom, none);\n          box-sizing: border-box;\n          --mdc-icon-size: 20px;\n        }\n\n        .main-title {\n          margin: 0 0 0 24px;\n          line-height: 20px;\n          flex-grow: 1;\n        }\n\n        mwc-icon-button {\n          pointer-events: auto;\n        }\n\n        hass-subpage {\n          --app-header-background-color: var(--sidebar-background-color);\n          --app-header-text-color: var(--sidebar-text-color);\n          --app-header-border-bottom: 1px solid var(--divider-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-aiszigbee\": ConfigAisZigbee;\n  }\n}\n"],"names":[],"sourceRoot":""}