{"version":3,"file":"eb759abc.js","mappings":";;AAiBA;AACA;;AAGA;AACA;;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;;;;ACvDA;;;AAOA;;AAGA;AACA;;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA","sources":["webpack://home-assistant-frontend/./src/onboarding/action-badge.ts","webpack://home-assistant-frontend/./src/onboarding/integration-badge.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/ha-svg-icon\";\n\n@customElement(\"action-badge\")\nclass ActionBadge extends LitElement {\n  @property() public icon!: string;\n\n  @property() public title!: string;\n\n  @property() public badgeIcon?: string;\n\n  @property({ type: Boolean, reflect: true }) public clickable = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"icon\">\n        <ha-svg-icon .path=${this.icon}></ha-svg-icon>\n        ${this.badgeIcon\n          ? html`<ha-svg-icon\n              class=\"badge\"\n              .path=${this.badgeIcon}\n            ></ha-svg-icon>`\n          : \"\"}\n      </div>\n      <div class=\"title\">${this.title}</div>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: inline-flex;\n        flex-direction: column;\n        text-align: center;\n        color: var(--primary-text-color);\n      }\n\n      :host([clickable]) {\n        color: var(--primary-text-color);\n      }\n\n      .icon {\n        position: relative;\n        box-sizing: border-box;\n        margin: 0 auto 8px;\n        height: 40px;\n        width: 40px;\n        border-radius: 50%;\n        border: 1px solid var(--secondary-text-color);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      :host([clickable]) .icon {\n        border-color: var(--primary-color);\n        border-width: 2px;\n      }\n\n      .badge {\n        position: absolute;\n        color: var(--primary-color);\n        bottom: -5px;\n        right: -5px;\n        background-color: white;\n        border-radius: 50%;\n        width: 18px;\n        display: block;\n        height: 18px;\n      }\n\n      .title {\n        min-height: 2.3em;\n        word-break: break-word;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"action-badge\": ActionBadge;\n  }\n}\n","import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport \"../components/ha-svg-icon\";\nimport { brandsUrl } from \"../util/brands-url\";\n\n@customElement(\"integration-badge\")\nclass IntegrationBadge extends LitElement {\n  @property() public domain!: string;\n\n  @property() public title!: string;\n\n  @property() public badgeIcon?: string;\n\n  @property({ type: Boolean }) public darkOptimizedIcon?: boolean;\n\n  @property({ type: Boolean, reflect: true }) public clickable = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"icon\">\n        <img\n          alt=\"\"\n          src=${brandsUrl({\n            domain: this.domain,\n            type: \"icon\",\n            darkOptimized: this.darkOptimizedIcon,\n          })}\n          referrerpolicy=\"no-referrer\"\n        />\n        ${this.badgeIcon\n          ? html`<ha-svg-icon\n              class=\"badge\"\n              .path=${this.badgeIcon}\n            ></ha-svg-icon>`\n          : \"\"}\n      </div>\n      <div class=\"title\">${this.title}</div>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host {\n        display: inline-flex;\n        flex-direction: column;\n        text-align: center;\n        color: var(--primary-text-color);\n      }\n\n      :host([clickable]) {\n        color: var(--primary-text-color);\n      }\n\n      img {\n        max-width: 100%;\n        max-height: 100%;\n      }\n\n      .icon {\n        position: relative;\n        margin: 0 auto 8px;\n        height: 40px;\n        width: 40px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      .badge {\n        position: absolute;\n        color: white;\n        bottom: -7px;\n        right: -10px;\n        background-color: var(--label-badge-green);\n        border-radius: 50%;\n        display: block;\n        --mdc-icon-size: 18px;\n        border: 2px solid white;\n      }\n\n      .title {\n        min-height: 2.3em;\n        word-break: break-word;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"integration-badge\": IntegrationBadge;\n  }\n}\n"],"names":[],"sourceRoot":""}