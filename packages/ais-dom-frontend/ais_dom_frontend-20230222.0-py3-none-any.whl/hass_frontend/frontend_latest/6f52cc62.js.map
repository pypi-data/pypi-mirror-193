{"version":3,"file":"6f52cc62.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuHA;;;AAMA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;AAUA;;;;;;;AAOA;;;;;;;AAOA;;;;;;;;AAQA;;;;;;;;;;AAWA","sources":["webpack://home-assistant-frontend/./src/panels/config/ais_dom/ha-config-ais-dom-config-display.ts"],"sourcesContent":["import \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"../../../layouts/hass-subpage\";\nimport \"./ha-config-ais-dom-dashboard\";\nimport { property } from \"lit/decorators\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { HomeAssistant } from \"../../../types\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigAisDomControl extends LitElement {\n  @property() public hass?: HomeAssistant;\n\n  @property({ type: Boolean }) public isWide = true;\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .content {\n        padding-bottom: 32px;\n      }\n      .border {\n        margin: 32px auto 0;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n        max-width: 1040px;\n      }\n      .narrow .border {\n        max-width: 640px;\n      }\n      .center-container {\n        @apply --layout-vertical;\n        @apply --layout-center-center;\n        height: 70px;\n      }\n      .content {\n        padding-bottom: 24px;\n        direction: ltr;\n      }\n      .account-row {\n        display: flex;\n        padding: 0 16px;\n      }\n      mwc-button {\n        align-self: center;\n      }\n      .soon {\n        font-style: italic;\n        margin-top: 24px;\n        text-align: center;\n      }\n      .nowrap {\n        white-space: nowrap;\n      }\n      .wrap {\n        white-space: normal;\n      }\n      .status {\n        text-transform: capitalize;\n        padding: 16px;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      .buttons {\n        position: relative;\n        width: 200px;\n        height: 200px;\n      }\n      .button {\n        position: absolute;\n        width: 50px;\n        height: 50px;\n      }\n      .arrow {\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n      }\n      .arrow-up {\n        border-left: 12px solid transparent;\n        border-right: 12px solid transparent;\n        border-bottom: 16px solid black;\n      }\n      .arrow-right {\n        border-top: 12px solid transparent;\n        border-bottom: 12px solid transparent;\n        border-left: 16px solid black;\n      }\n      .arrow-left {\n        border-top: 12px solid transparent;\n        border-bottom: 12px solid transparent;\n        border-right: 16px solid black;\n      }\n      .arrow-down {\n        border-left: 12px solid transparent;\n        border-right: 12px solid transparent;\n        border-top: 16px solid black;\n      }\n      .down {\n        bottom: 0;\n        left: 75px;\n      }\n      .left {\n        top: 75px;\n        left: 0;\n      }\n      .right {\n        top: 75px;\n        right: 0;\n      }\n      .up {\n        top: 0;\n        left: 75px;\n      }\n      div.card-actions {\n        text-align: center;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-subpage header=\"Konfiguracja bramki AIS dom\">\n        <div>\n          <ha-config-section .isWide=${this.isWide}>\n            <span slot=\"header\">Ustawienia ekranu</span>\n            <span slot=\"introduction\"\n              >Jeżeli obraz na monitorze lub telewizorze podłączonym do bramki\n              za pomocą złącza HDMI jest ucięty lub przesunięty, to w tym\n              miejscu możesz dostosować obraz do rozmiaru ekranu.</span\n            >\n            <ha-card header=\"Dostosuj obraz do rozmiaru ekranu\">\n              <div class=\"card-content\">\n                <div class=\"card-content\" style=\"text-align: center;\">\n                  <div style=\"display: inline-block;\">\n                    <p>Powiększanie</p>\n                    <div\n                      class=\"buttons\"\n                      style=\"margin: 0 auto; display: table; border:solid 1px;\"\n                    >\n                      <button\n                        class=\"button up\"\n                        data-value=\"top\"\n                        @click=${this.wmOverscan}\n                      >\n                        <span class=\"arrow-up arrow\"></span>\n                      </button>\n                      <button\n                        class=\"button down\"\n                        data-value=\"bottom\"\n                        @click=${this.wmOverscan}\n                      >\n                        <span class=\"arrow-down arrow\"></span>\n                      </button>\n                      <button\n                        class=\"button right\"\n                        data-value=\"right\"\n                        @click=${this.wmOverscan}\n                      >\n                        <span class=\"arrow-right arrow\"></span>\n                      </button>\n                      <button\n                        class=\"button left\"\n                        data-value=\"left\"\n                        @click=${this.wmOverscan}\n                      >\n                        <span class=\"arrow-left arrow\"></span>\n                      </button>\n                    </div>\n                  </div>\n                  <div\n                    style=\"text-align: center; display: inline-block; margin: 30px;\"\n                  >\n                    <p>Zmniejszanie</p>\n                    <div\n                      class=\"buttons\"\n                      style=\"margin: 0 auto; display: table;\"\n                    >\n                      <button\n                        class=\"button up\"\n                        data-value=\"-top\"\n                        @click=${this.wmOverscan}\n                      >\n                        <span class=\"arrow-down arrow\"></span>\n                      </button>\n                      <div\n                        style=\"margin: 0 auto; height: 98px; width:98px; margin-top: 50px; margin-left: 50px; display: flex; border:solid 1px;\"\n                      ></div>\n                      <button\n                        class=\"button down\"\n                        data-value=\"-bottom\"\n                        @click=${this.wmOverscan}\n                      >\n                        <span class=\"arrow-up arrow\"></span>\n                      </button>\n                      <button\n                        class=\"button right\"\n                        data-value=\"-right\"\n                        @click=${this.wmOverscan}\n                      >\n                        <span class=\"arrow-left arrow\"></span>\n                      </button>\n                      <button\n                        class=\"button left\"\n                        data-value=\"-left\"\n                        @click=${this.wmOverscan}\n                      >\n                        <span class=\"arrow-right arrow\"></span>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"card-actions\" style=\"margin-top: 30px;\">\n                  <mwc-button @click=${this.wmOverscan} data-value=\"reset\">\n                    <ha-icon class=\"user-button\" icon=\"mdi:restore\"></ha-icon>\n                    Reset ekranu do ustawień domyślnych\n                  </mwc-button>\n                </div>\n              </div>\n            </ha-card>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  wmOverscan(event) {\n    this.hass.callService(\"ais_shell_command\", \"change_wm_overscan\", {\n      value: event.currentTarget.getAttribute(\"data-value\"),\n    });\n  }\n}\n\ncustomElements.define(\n  \"ha-config-ais-dom-config-display\",\n  HaConfigAisDomControl\n);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-ais-dom-config-display\": HaConfigAisDomControl;\n  }\n}\n"],"names":[],"sourceRoot":""}