{"version":3,"file":"1fbb6349.js","mappings":";;;;;;AAsGA;AACA;;;;;;AAMA;;;;;AAKA;AACA;;AAEA;;;AAIA;;;;;;;;;;;;;;;;;;;;;AA4BA","sources":["webpack://home-assistant-frontend/./src/panels/aiszigbee/ha-panel-aiszigbee.ts"],"sourcesContent":["import {\n  css,\n  CSSResultArray,\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n} from \"lit\";\nimport { property, customElement } from \"lit/decorators\";\nimport \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@material/mwc-checkbox\";\nimport \"@material/mwc-formfield\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-card\";\nimport { aisZigbeeLovelace } from \"./ais_zigbee_lovelace\";\nimport type { HomeAssistant } from \"../../types\";\nimport { haStyle } from \"../../resources/styles\";\nimport \"../lovelace/views/hui-view\";\nimport { Lovelace } from \"../lovelace/types\";\n\n@customElement(\"ha-panel-aiszigbee\")\nclass PanelAisZigbee extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true })\n  public narrow!: boolean;\n\n  @property() private _columns?: number;\n\n  private mqls?: MediaQueryList[];\n\n  private _updateColumns() {\n    const matchColumns = this.mqls!.reduce(\n      (cols, mql) => cols + Number(mql.matches),\n      0\n    );\n    // Do -1 column if the menu is docked and open\n    this._columns = Math.max(\n      1,\n      matchColumns -\n        Number(!this.narrow && this.hass!.dockedSidebar === \"docked\")\n    );\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"narrow\")) {\n      this._updateColumns();\n      return;\n    }\n\n    if (!changedProps.has(\"hass\")) {\n      return;\n    }\n\n    const oldHass = changedProps.get(\"hass\") as this[\"hass\"];\n\n    if (oldHass && this.hass!.dockedSidebar !== oldHass.dockedSidebar) {\n      this._updateColumns();\n    }\n  }\n\n  protected firstUpdated() {\n    this._updateColumns = this._updateColumns.bind(this);\n    this.mqls = [300, 600, 900, 1200].map((width) => {\n      const mql = matchMedia(`(min-width: ${width}px)`);\n      mql.addListener(this._updateColumns);\n      return mql;\n    });\n    this._updateColumns();\n  }\n\n  async _showHelp() {\n    const win = window.open(\n      \"https://www.ai-speaker.com/docs/ais_app_integration_zigbee\",\n      \"_blank\"\n    );\n    win!.focus();\n  }\n\n  protected render(): TemplateResult {\n    const lovelace: Lovelace = {\n      config: aisZigbeeLovelace,\n      rawConfig: aisZigbeeLovelace,\n      editMode: false,\n      urlPath: null,\n      enableFullEditMode: () => undefined,\n      mode: \"storage\",\n      locale: this.hass.locale,\n      saveConfig: async () => undefined,\n      deleteConfig: async () => undefined,\n      setEditMode: () => undefined,\n    };\n\n    return html`\n      <app-header-layout has-scrolling-region>\n        <app-header fixed slot=\"header\">\n          <app-toolbar>\n            <ha-menu-button\n              .hass=${this.hass}\n              .narrow=${this.narrow}\n            ></ha-menu-button>\n            <div main-title>Zigbee</div>\n            <ha-icon-button\n              label=\"Pomoc\"\n              icon=\"hass:information-outline\"\n              @click=${this._showHelp}\n            ></ha-icon-button>\n          </app-toolbar>\n        </app-header>\n        <hui-view\n          .hass=${this.hass}\n          .lovelace=${lovelace}\n          index=\"0\"\n          .columns=${this._columns}\n        ></hui-view>\n      </app-header-layout>\n    `;\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyle,\n      css`\n        .content {\n          padding: 16px;\n          display: flex;\n          box-sizing: border-box;\n        }\n\n        :host(:not([narrow])) .content {\n          height: calc(100vh - 64px);\n        }\n\n        :host([narrow]) .content {\n          flex-direction: column-reverse;\n          padding: 8px 0 0 0;\n        }\n\n        :host([narrow]) .calendar-list {\n          margin-bottom: 24px;\n          width: 100%;\n          padding-right: 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-aiszigbee\": PanelAisZigbee;\n  }\n}\n"],"names":[],"sourceRoot":""}