{"version":3,"file":"e3fd90e7.js","mappings":";;;;;;AAqFA;AACA;;;;AAIA;AACA;;;;;AAKA;AACA;;;;;AAKA;AACA;;;;AAIA;AACA;;;;AAIA;;AAGA;;;;;;;;;;;;AAmBA","sources":["webpack://home-assistant-frontend/./src/panels/aisaudio/ha-panel-aisaudio.ts"],"sourcesContent":["import { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { property, customElement } from \"lit/decorators\";\nimport \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@material/mwc-checkbox\";\nimport \"@material/mwc-formfield\";\nimport {\n  mdiMicrophone,\n  mdiFolderMultiple,\n  mdiMusicNotePlus,\n  mdiInformation,\n} from \"@mdi/js\";\nimport { showVoiceCommandDialog } from \"../../dialogs/voice-command-dialog/show-ha-voice-command-dialog\";\nimport { showMediaBrowserDialog } from \"../../components/media-player/show-media-browser-dialog\";\nimport { showCheckMediaSourceAisDialog } from \"../../components/media-player/show-check-media-source-ais-dialog\";\nimport { showAddMediaSourceAisDialog } from \"../../components/media-player/show-add-media-source-ais-dialog\";\nimport { MediaPickedEvent } from \"../../data/media-player\";\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-card\";\nimport { aisAudioLovelace } from \"./ais_audio_lovelace\";\nimport type { HomeAssistant } from \"../../types\";\nimport \"../lovelace/views/hui-view\";\nimport { Lovelace } from \"../lovelace/types\";\nimport { haStyle } from \"../../resources/styles\";\n\n@customElement(\"ha-panel-aisaudio\")\nclass PanelAisAudio extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean, reflect: true })\n  public narrow!: boolean;\n\n  private _showBrowseMedia(): void {\n    showMediaBrowserDialog(this, {\n      action: \"play\",\n      entityId: \"media_player.wbudowany_glosnik\",\n      mediaPickedCallback: (pickedMedia: MediaPickedEvent) =>\n        this.hass!.callService(\"media_player\", \"play_media\", {\n          entity_id: \"media_player.wbudowany_glosnik\",\n          media_content_id: pickedMedia.item.media_content_id,\n          media_content_type: pickedMedia.item.media_content_type,\n        }),\n    });\n  }\n\n  private _showCheckAisMedia(): void {\n    showCheckMediaSourceAisDialog(this, {\n      selectedOptionCallback: (option: string) =>\n        // eslint-disable-next-line no-console\n        console.log(\"option: \" + option),\n    });\n  }\n\n  private _showAddAisMedia(): void {\n    showAddMediaSourceAisDialog(this, {\n      selectedOptionCallback: (option: string) =>\n        // eslint-disable-next-line no-console\n        console.log(\"option: \" + option),\n    });\n  }\n\n  private _showVoiceCommandDialog(): void {\n    showVoiceCommandDialog(this);\n  }\n\n  protected render(): TemplateResult {\n    const lovelace: Lovelace = {\n      config: aisAudioLovelace,\n      rawConfig: aisAudioLovelace,\n      editMode: false,\n      urlPath: null,\n      enableFullEditMode: () => undefined,\n      mode: \"storage\",\n      locale: this.hass.locale,\n      saveConfig: async () => undefined,\n      deleteConfig: async () => undefined,\n      setEditMode: () => undefined,\n    };\n\n    return html`\n      <app-header-layout has-scrolling-region>\n        <app-header fixed slot=\"header\">\n          <app-toolbar>\n            <ha-menu-button\n              .hass=${this.hass}\n              .narrow=${this.narrow}\n            ></ha-menu-button>\n            <ha-icon-button\n              label=\"Informacje o audio\"\n              .path=${mdiInformation}\n              @click=${this._showCheckAisMedia}\n            ></ha-icon-button>\n            <ha-icon-button\n              label=\"Dodaj audio\"\n              icon=\"hass:music-note-plus\"\n              .path=${mdiMusicNotePlus}\n              @click=${this._showAddAisMedia}\n            ></ha-icon-button>\n            <div main-title>Audio</div>\n            <ha-icon-button\n              label=\"Przeglądaj media\"\n              .path=${mdiFolderMultiple}\n              @click=${this._showBrowseMedia}\n            ></ha-icon-button>\n            <ha-icon-button\n              label=\"Rozpocznij rozmowę\"\n              .path=${mdiMicrophone}\n              @click=${this._showVoiceCommandDialog}\n            ></ha-icon-button>\n          </app-toolbar>\n        </app-header>\n        <hui-view .hass=${this.hass} .lovelace=${lovelace} index=\"0\"></hui-view>\n      </app-header-layout>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        :host {\n          min-height: 100vh;\n          height: 0;\n          display: flex;\n          flex-direction: column;\n          box-sizing: border-box;\n          background: var(--primary-background-color);\n        }\n        :host > * {\n          flex: 1;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-panel-aisaudio\": PanelAisAudio;\n  }\n}\n"],"names":[],"sourceRoot":""}