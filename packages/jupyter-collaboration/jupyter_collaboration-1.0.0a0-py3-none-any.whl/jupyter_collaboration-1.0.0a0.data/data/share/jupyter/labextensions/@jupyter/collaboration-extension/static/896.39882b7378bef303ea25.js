"use strict";(self.webpackChunk_jupyter_collaboration_extension=self.webpackChunk_jupyter_collaboration_extension||[]).push([[896,355],{1355:(e,t,s)=>{s.r(t),s.d(t,{WebSocketProvider:()=>h,YDrive:()=>d});var r=s(7875),o=s(7502),n=s(8932),i=s(1531),a=s(3569),c=s(7099);class h{constructor(e){this._ready=new i.PromiseDelegate,this._isDisposed=!1,this._path=e.path,this._contentType=e.contentType,this._format=e.format,this._serverUrl=e.url,this._ydoc=e.model.ydoc,this._awareness=e.model.awareness,this._yWebsocketProvider=null;const t=e.user;t.ready.then((()=>{this._onUserChanged(t)})).catch((e=>console.error(e))),t.userChanged.connect(this._onUserChanged,this);const s=n.ServerConnection.makeSettings(),r=o.URLExt.join(s.baseUrl,"api/yjs/roomid",encodeURIComponent(this._path)),a={method:"PUT",body:JSON.stringify({format:this._format,type:this._contentType})};n.ServerConnection.makeRequest(r,a,s).then((e=>{if(200!==e.status&&201!==e.status)throw new n.ServerConnection.ResponseError(e);return e.text()})).then((e=>{this._yWebsocketProvider=new c.WebsocketProvider(this._serverUrl,e,this._ydoc,{awareness:this._awareness})})).then((()=>this._ready.resolve())).catch((e=>console.warn(e)))}get isDisposed(){return this._isDisposed}get ready(){return this._ready.promise}dispose(){var e;this.isDisposed||(this._isDisposed=!0,null===(e=this._yWebsocketProvider)||void 0===e||e.destroy(),a.Signal.clearData(this))}_onUserChanged(e){this._awareness.setLocalStateField("user",e.identity)}}class d extends n.Drive{constructor(e){super({name:"YDrive"}),this._onCreate=(e,t)=>{if("string"==typeof e.format)try{const s=new h({url:o.URLExt.join(this.serverSettings.wsUrl,"api/yjs"),path:e.path,format:e.format,contentType:e.contentType,model:t,user:this._user}),r=`${e.contentType}:${e.format}:${e.path}`;this._providers.set(r,s),t.disposed.connect((()=>{const e=this._providers.get(r);e&&(e.dispose(),this._providers.delete(r))}))}catch(t){console.error(`Failed to open websocket connection for ${e.path}.\n:${t}`)}},this._user=e,this._providers=new Map,this.sharedModelFactory=new p(this._onCreate)}async delete(e){await super.delete(e)}dispose(){this.isDisposed||(this._providers.forEach((e=>e.dispose())),this._providers.clear(),super.dispose())}async get(e,t){if(t&&t.format&&t.type){const s=`${t.type}:${t.format}:${e}`,r=this._providers.get(s);if(r){const s=super.get(e,{...t,content:!1});return await r.ready,s}}return super.get(e,t)}async rename(e,t){return await super.rename(e,t)}async save(e,t={}){return this.get(e,{...t,content:!1})}}class p{constructor(e){this._onCreate=e,this.collaborative=!0}createNew(e){if("string"!=typeof e.format)return void console.warn(`Only defined format are supported; got ${e.format}.`);if(!e.collaborative)return;let t;switch(e.contentType){case"file":t=new r.YFile;break;case"notebook":t=new r.YNotebook}return t&&this._onCreate(e,t),t}}}}]);