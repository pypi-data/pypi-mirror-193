Metadata-Version: 2.1
Name: qubit-approximant
Version: 0.1.4
Summary: Approximate a function using a single qubit.
Home-page: https://github.com/pablovegan/QubitApproximant
Author: Pablo V. Parellada
License: MIT
Platform: unix
Platform: linux
Platform: osx
Classifier: License :: OSI Approved
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: mpi4py
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: pandas
Requires-Dist: dill
Requires-Dist: pathos
Requires-Dist: pennylane
Provides-Extra: testing
Requires-Dist: pytest ; extra == 'testing'
Requires-Dist: codecov ; extra == 'testing'
Requires-Dist: pytest-cov ; extra == 'testing'
Requires-Dist: pre-commit ; extra == 'testing'
Requires-Dist: tox ; extra == 'testing'
Requires-Dist: pylint ; extra == 'testing'
Requires-Dist: flake8 ; extra == 'testing'
Requires-Dist: mypy ; extra == 'testing'
Requires-Dist: isort ; extra == 'testing'
Requires-Dist: black ; extra == 'testing'
Requires-Dist: autopep8 ; extra == 'testing'

# QubitApproximant

[![documentation](https://img.shields.io/badge/docs-mkdocs%20material-blue.svg?style=flat)](https://pablovegan.github.io/QubitApproximant/)
[![pypi version](https://img.shields.io/pypi/v/mkdocstrings.svg)](https://pypi.org/project/mkdocstrings/)
[![conda version](https://img.shields.io/conda/vn/conda-forge/mkdocstrings)](https://anaconda.org/conda-forge/mkdocstrings)

A `python` package for approximating quantum circuits with a single qubit.

## Documentation and examples
Documentation created with `mkocs` can be found in https://pablovegan.github.io/QubitApproximant/.
## Installation

With `pip`:
```bash
pip install qubitapproximant
```

## Quick usage

Creating a quantum circuit with a cost function and optimizing the optimum parameters is very straightforward

```yaml
site_name: "My Library"

theme:
  name: "material"

plugins:
- search
- mkdocstrings
```

In one of your markdown files:

```markdown
# Reference

::: my_library.my_module.my_class
```

See the [Usage](https://mkdocstrings.github.io/usage) section of the docs for more examples!
