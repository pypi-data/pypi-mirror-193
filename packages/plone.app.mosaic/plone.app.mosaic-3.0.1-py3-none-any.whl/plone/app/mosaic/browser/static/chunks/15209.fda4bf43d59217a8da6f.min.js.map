{"version":3,"file":"chunks/15209.fda4bf43d59217a8da6f.min.js","mappings":"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","sources":["webpack://plone-mosaic/./node_modules/tinymce/plugins/autoresize/index.js","webpack://plone-mosaic/./node_modules/tinymce/plugins/autoresize/plugin.js"],"sourcesContent":["// Exports the \"autoresize\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/autoresize')\n//   ES2015:\n//     import 'tinymce/plugins/autoresize'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.7 (2022-12-06)\n */\n(function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var hasOwnProperty = Object.hasOwnProperty;\n    var has = function (obj, key) {\n      return hasOwnProperty.call(obj, key);\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var fireResizeEditor = function (editor) {\n      return editor.fire('ResizeEditor');\n    };\n\n    var getAutoResizeMinHeight = function (editor) {\n      return editor.getParam('min_height', editor.getElement().offsetHeight, 'number');\n    };\n    var getAutoResizeMaxHeight = function (editor) {\n      return editor.getParam('max_height', 0, 'number');\n    };\n    var getAutoResizeOverflowPadding = function (editor) {\n      return editor.getParam('autoresize_overflow_padding', 1, 'number');\n    };\n    var getAutoResizeBottomMargin = function (editor) {\n      return editor.getParam('autoresize_bottom_margin', 50, 'number');\n    };\n    var shouldAutoResizeOnInit = function (editor) {\n      return editor.getParam('autoresize_on_init', true, 'boolean');\n    };\n\n    var isFullscreen = function (editor) {\n      return editor.plugins.fullscreen && editor.plugins.fullscreen.isFullscreen();\n    };\n    var wait = function (editor, oldSize, times, interval, callback) {\n      global.setEditorTimeout(editor, function () {\n        resize(editor, oldSize);\n        if (times--) {\n          wait(editor, oldSize, times, interval, callback);\n        } else if (callback) {\n          callback();\n        }\n      }, interval);\n    };\n    var toggleScrolling = function (editor, state) {\n      var body = editor.getBody();\n      if (body) {\n        body.style.overflowY = state ? '' : 'hidden';\n        if (!state) {\n          body.scrollTop = 0;\n        }\n      }\n    };\n    var parseCssValueToInt = function (dom, elm, name, computed) {\n      var value = parseInt(dom.getStyle(elm, name, computed), 10);\n      return isNaN(value) ? 0 : value;\n    };\n    var shouldScrollIntoView = function (trigger) {\n      if ((trigger === null || trigger === void 0 ? void 0 : trigger.type.toLowerCase()) === 'setcontent') {\n        var setContentEvent = trigger;\n        return setContentEvent.selection === true || setContentEvent.paste === true;\n      } else {\n        return false;\n      }\n    };\n    var resize = function (editor, oldSize, trigger) {\n      var dom = editor.dom;\n      var doc = editor.getDoc();\n      if (!doc) {\n        return;\n      }\n      if (isFullscreen(editor)) {\n        toggleScrolling(editor, true);\n        return;\n      }\n      var docEle = doc.documentElement;\n      var resizeBottomMargin = getAutoResizeBottomMargin(editor);\n      var resizeHeight = getAutoResizeMinHeight(editor);\n      var marginTop = parseCssValueToInt(dom, docEle, 'margin-top', true);\n      var marginBottom = parseCssValueToInt(dom, docEle, 'margin-bottom', true);\n      var contentHeight = docEle.offsetHeight + marginTop + marginBottom + resizeBottomMargin;\n      if (contentHeight < 0) {\n        contentHeight = 0;\n      }\n      var containerHeight = editor.getContainer().offsetHeight;\n      var contentAreaHeight = editor.getContentAreaContainer().offsetHeight;\n      var chromeHeight = containerHeight - contentAreaHeight;\n      if (contentHeight + chromeHeight > getAutoResizeMinHeight(editor)) {\n        resizeHeight = contentHeight + chromeHeight;\n      }\n      var maxHeight = getAutoResizeMaxHeight(editor);\n      if (maxHeight && resizeHeight > maxHeight) {\n        resizeHeight = maxHeight;\n        toggleScrolling(editor, true);\n      } else {\n        toggleScrolling(editor, false);\n      }\n      if (resizeHeight !== oldSize.get()) {\n        var deltaSize = resizeHeight - oldSize.get();\n        dom.setStyle(editor.getContainer(), 'height', resizeHeight + 'px');\n        oldSize.set(resizeHeight);\n        fireResizeEditor(editor);\n        if (global$1.browser.isSafari() && global$1.mac) {\n          var win = editor.getWin();\n          win.scrollTo(win.pageXOffset, win.pageYOffset);\n        }\n        if (editor.hasFocus() && shouldScrollIntoView(trigger)) {\n          editor.selection.scrollIntoView();\n        }\n        if (global$1.webkit && deltaSize < 0) {\n          resize(editor, oldSize, trigger);\n        }\n      }\n    };\n    var setup = function (editor, oldSize) {\n      editor.on('init', function () {\n        var overflowPadding = getAutoResizeOverflowPadding(editor);\n        var dom = editor.dom;\n        dom.setStyles(editor.getDoc().documentElement, { height: 'auto' });\n        dom.setStyles(editor.getBody(), {\n          'paddingLeft': overflowPadding,\n          'paddingRight': overflowPadding,\n          'min-height': 0\n        });\n      });\n      editor.on('NodeChange SetContent keyup FullscreenStateChanged ResizeContent', function (e) {\n        resize(editor, oldSize, e);\n      });\n      if (shouldAutoResizeOnInit(editor)) {\n        editor.on('init', function () {\n          wait(editor, oldSize, 20, 100, function () {\n            wait(editor, oldSize, 5, 1000);\n          });\n        });\n      }\n    };\n\n    var register = function (editor, oldSize) {\n      editor.addCommand('mceAutoResize', function () {\n        resize(editor, oldSize);\n      });\n    };\n\n    function Plugin () {\n      global$2.add('autoresize', function (editor) {\n        if (!has(editor.settings, 'resize')) {\n          editor.settings.resize = false;\n        }\n        if (!editor.inline) {\n          var oldSize = Cell(0);\n          register(editor, oldSize);\n          setup(editor, oldSize);\n        }\n      });\n    }\n\n    Plugin();\n\n}());\n"],"names":["Cell","initial","value","get","set","v","hasOwnProperty","Object","has","obj","key","call","global$2","tinymce","util","Tools","resolve","global$1","global","getAutoResizeMinHeight","editor","getParam","getElement","offsetHeight","wait","oldSize","times","interval","callback","setEditorTimeout","resize","toggleScrolling","state","body","getBody","style","overflowY","scrollTop","parseCssValueToInt","dom","elm","name","computed","parseInt","getStyle","isNaN","trigger","doc","getDoc","plugins","fullscreen","isFullscreen","docEle","documentElement","resizeBottomMargin","getAutoResizeBottomMargin","resizeHeight","marginTop","marginBottom","contentHeight","chromeHeight","getContainer","getContentAreaContainer","maxHeight","getAutoResizeMaxHeight","deltaSize","setStyle","fire","fireResizeEditor","browser","isSafari","mac","win","getWin","scrollTo","pageXOffset","pageYOffset","hasFocus","type","toLowerCase","setContentEvent","selection","paste","shouldScrollIntoView","scrollIntoView","webkit","setup","on","overflowPadding","getAutoResizeOverflowPadding","setStyles","height","e","shouldAutoResizeOnInit","register","addCommand","add","settings","inline"],"sourceRoot":""}