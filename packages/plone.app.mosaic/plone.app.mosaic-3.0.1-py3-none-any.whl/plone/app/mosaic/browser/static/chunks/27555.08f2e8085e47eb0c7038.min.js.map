{"version":3,"file":"chunks/27555.08f2e8085e47eb0c7038.min.js","mappings":"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","sources":["webpack://plone-mosaic/./node_modules/tinymce/plugins/spellchecker/index.js","webpack://plone-mosaic/./node_modules/tinymce/plugins/spellchecker/plugin.js"],"sourcesContent":["// Exports the \"spellchecker\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/spellchecker')\n//   ES2015:\n//     import 'tinymce/plugins/spellchecker'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.7 (2022-12-06)\n */\n(function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var hasProPlugin = function (editor) {\n      if (editor.hasPlugin('tinymcespellchecker', true)) {\n        if (typeof window.console !== 'undefined' && window.console.log) {\n          window.console.log('Spell Checker Pro is incompatible with Spell Checker plugin! ' + 'Remove \\'spellchecker\\' from the \\'plugins\\' option.');\n        }\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    var hasOwnProperty = Object.hasOwnProperty;\n    var isEmpty = function (r) {\n      for (var x in r) {\n        if (hasOwnProperty.call(r, x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    var global = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var fireSpellcheckStart = function (editor) {\n      return editor.fire('SpellcheckStart');\n    };\n    var fireSpellcheckEnd = function (editor) {\n      return editor.fire('SpellcheckEnd');\n    };\n\n    var getLanguages = function (editor) {\n      var defaultLanguages = 'English=en,Danish=da,Dutch=nl,Finnish=fi,French=fr_FR,German=de,Italian=it,Polish=pl,Portuguese=pt_BR,Spanish=es,Swedish=sv';\n      return editor.getParam('spellchecker_languages', defaultLanguages);\n    };\n    var getLanguage = function (editor) {\n      var defaultLanguage = editor.getParam('language', 'en');\n      return editor.getParam('spellchecker_language', defaultLanguage);\n    };\n    var getRpcUrl = function (editor) {\n      return editor.getParam('spellchecker_rpc_url');\n    };\n    var getSpellcheckerCallback = function (editor) {\n      return editor.getParam('spellchecker_callback');\n    };\n    var getSpellcheckerWordcharPattern = function (editor) {\n      var defaultPattern = new RegExp('[^' + '\\\\s!\"#$%&()*+,-./:;<=>?@[\\\\]^_{|}`' + '\\xA7\\xA9\\xAB\\xAE\\xB1\\xB6\\xB7\\xB8\\xBB' + '\\xBC\\xBD\\xBE\\xBF\\xD7\\xF7\\xA4\\u201D\\u201C\\u201E\\xA0\\u2002\\u2003\\u2009' + ']+', 'g');\n      return editor.getParam('spellchecker_wordchar_pattern', defaultPattern);\n    };\n\n    var isContentEditableFalse = function (node) {\n      return node && node.nodeType === 1 && node.contentEditable === 'false';\n    };\n    var DomTextMatcher = function (node, editor) {\n      var m, matches = [];\n      var dom = editor.dom;\n      var blockElementsMap = editor.schema.getBlockElements();\n      var hiddenTextElementsMap = editor.schema.getWhiteSpaceElements();\n      var shortEndedElementsMap = editor.schema.getShortEndedElements();\n      var createMatch = function (m, data) {\n        if (!m[0]) {\n          throw new Error('findAndReplaceDOMText cannot handle zero-length matches');\n        }\n        return {\n          start: m.index,\n          end: m.index + m[0].length,\n          text: m[0],\n          data: data\n        };\n      };\n      var getText = function (node) {\n        if (node.nodeType === 3) {\n          return node.data;\n        }\n        if (hiddenTextElementsMap[node.nodeName] && !blockElementsMap[node.nodeName]) {\n          return '';\n        }\n        if (isContentEditableFalse(node)) {\n          return '\\n';\n        }\n        var txt = '';\n        if (blockElementsMap[node.nodeName] || shortEndedElementsMap[node.nodeName]) {\n          txt += '\\n';\n        }\n        if (node = node.firstChild) {\n          do {\n            txt += getText(node);\n          } while (node = node.nextSibling);\n        }\n        return txt;\n      };\n      var stepThroughMatches = function (node, matches, replaceFn) {\n        var startNode, endNode, startNodeIndex, endNodeIndex, innerNodes = [], atIndex = 0, curNode = node, matchLocation, matchIndex = 0;\n        matches = matches.slice(0);\n        matches.sort(function (a, b) {\n          return a.start - b.start;\n        });\n        matchLocation = matches.shift();\n        out:\n          while (true) {\n            if (blockElementsMap[curNode.nodeName] || shortEndedElementsMap[curNode.nodeName] || isContentEditableFalse(curNode)) {\n              atIndex++;\n            }\n            if (curNode.nodeType === 3) {\n              if (!endNode && curNode.length + atIndex >= matchLocation.end) {\n                endNode = curNode;\n                endNodeIndex = matchLocation.end - atIndex;\n              } else if (startNode) {\n                innerNodes.push(curNode);\n              }\n              if (!startNode && curNode.length + atIndex > matchLocation.start) {\n                startNode = curNode;\n                startNodeIndex = matchLocation.start - atIndex;\n              }\n              atIndex += curNode.length;\n            }\n            if (startNode && endNode) {\n              curNode = replaceFn({\n                startNode: startNode,\n                startNodeIndex: startNodeIndex,\n                endNode: endNode,\n                endNodeIndex: endNodeIndex,\n                innerNodes: innerNodes,\n                match: matchLocation.text,\n                matchIndex: matchIndex\n              });\n              atIndex -= endNode.length - endNodeIndex;\n              startNode = null;\n              endNode = null;\n              innerNodes = [];\n              matchLocation = matches.shift();\n              matchIndex++;\n              if (!matchLocation) {\n                break;\n              }\n            } else if ((!hiddenTextElementsMap[curNode.nodeName] || blockElementsMap[curNode.nodeName]) && curNode.firstChild) {\n              if (!isContentEditableFalse(curNode)) {\n                curNode = curNode.firstChild;\n                continue;\n              }\n            } else if (curNode.nextSibling) {\n              curNode = curNode.nextSibling;\n              continue;\n            }\n            while (true) {\n              if (curNode.nextSibling) {\n                curNode = curNode.nextSibling;\n                break;\n              } else if (curNode.parentNode !== node) {\n                curNode = curNode.parentNode;\n              } else {\n                break out;\n              }\n            }\n          }\n      };\n      var genReplacer = function (callback) {\n        var makeReplacementNode = function (fill, matchIndex) {\n          var match = matches[matchIndex];\n          if (!match.stencil) {\n            match.stencil = callback(match);\n          }\n          var clone = match.stencil.cloneNode(false);\n          clone.setAttribute('data-mce-index', '' + matchIndex);\n          if (fill) {\n            clone.appendChild(dom.doc.createTextNode(fill));\n          }\n          return clone;\n        };\n        return function (range) {\n          var before;\n          var after;\n          var parentNode;\n          var startNode = range.startNode;\n          var endNode = range.endNode;\n          var matchIndex = range.matchIndex;\n          var doc = dom.doc;\n          if (startNode === endNode) {\n            var node_1 = startNode;\n            parentNode = node_1.parentNode;\n            if (range.startNodeIndex > 0) {\n              before = doc.createTextNode(node_1.data.substring(0, range.startNodeIndex));\n              parentNode.insertBefore(before, node_1);\n            }\n            var el = makeReplacementNode(range.match, matchIndex);\n            parentNode.insertBefore(el, node_1);\n            if (range.endNodeIndex < node_1.length) {\n              after = doc.createTextNode(node_1.data.substring(range.endNodeIndex));\n              parentNode.insertBefore(after, node_1);\n            }\n            node_1.parentNode.removeChild(node_1);\n            return el;\n          }\n          before = doc.createTextNode(startNode.data.substring(0, range.startNodeIndex));\n          after = doc.createTextNode(endNode.data.substring(range.endNodeIndex));\n          var elA = makeReplacementNode(startNode.data.substring(range.startNodeIndex), matchIndex);\n          for (var i = 0, l = range.innerNodes.length; i < l; ++i) {\n            var innerNode = range.innerNodes[i];\n            var innerEl = makeReplacementNode(innerNode.data, matchIndex);\n            innerNode.parentNode.replaceChild(innerEl, innerNode);\n          }\n          var elB = makeReplacementNode(endNode.data.substring(0, range.endNodeIndex), matchIndex);\n          parentNode = startNode.parentNode;\n          parentNode.insertBefore(before, startNode);\n          parentNode.insertBefore(elA, startNode);\n          parentNode.removeChild(startNode);\n          parentNode = endNode.parentNode;\n          parentNode.insertBefore(elB, endNode);\n          parentNode.insertBefore(after, endNode);\n          parentNode.removeChild(endNode);\n          return elB;\n        };\n      };\n      var unwrapElement = function (element) {\n        var parentNode = element.parentNode;\n        while (element.childNodes.length > 0) {\n          parentNode.insertBefore(element.childNodes[0], element);\n        }\n        parentNode.removeChild(element);\n      };\n      var hasClass = function (elm) {\n        return elm.className.indexOf('mce-spellchecker-word') !== -1;\n      };\n      var getWrappersByIndex = function (index) {\n        var elements = node.getElementsByTagName('*'), wrappers = [];\n        index = typeof index === 'number' ? '' + index : null;\n        for (var i = 0; i < elements.length; i++) {\n          var element = elements[i], dataIndex = element.getAttribute('data-mce-index');\n          if (dataIndex !== null && dataIndex.length && hasClass(element)) {\n            if (dataIndex === index || index === null) {\n              wrappers.push(element);\n            }\n          }\n        }\n        return wrappers;\n      };\n      var indexOf = function (match) {\n        var i = matches.length;\n        while (i--) {\n          if (matches[i] === match) {\n            return i;\n          }\n        }\n        return -1;\n      };\n      function filter(callback) {\n        var filteredMatches = [];\n        each(function (match, i) {\n          if (callback(match, i)) {\n            filteredMatches.push(match);\n          }\n        });\n        matches = filteredMatches;\n        return this;\n      }\n      function each(callback) {\n        for (var i = 0, l = matches.length; i < l; i++) {\n          if (callback(matches[i], i) === false) {\n            break;\n          }\n        }\n        return this;\n      }\n      function wrap(callback) {\n        if (matches.length) {\n          stepThroughMatches(node, matches, genReplacer(callback));\n        }\n        return this;\n      }\n      function find(regex, data) {\n        if (text && regex.global) {\n          while (m = regex.exec(text)) {\n            matches.push(createMatch(m, data));\n          }\n        }\n        return this;\n      }\n      function unwrap(match) {\n        var i;\n        var elements = getWrappersByIndex(match ? indexOf(match) : null);\n        i = elements.length;\n        while (i--) {\n          unwrapElement(elements[i]);\n        }\n        return this;\n      }\n      var matchFromElement = function (element) {\n        return matches[element.getAttribute('data-mce-index')];\n      };\n      var elementFromMatch = function (match) {\n        return getWrappersByIndex(indexOf(match))[0];\n      };\n      function add(start, length, data) {\n        matches.push({\n          start: start,\n          end: start + length,\n          text: text.substr(start, length),\n          data: data\n        });\n        return this;\n      }\n      var rangeFromMatch = function (match) {\n        var wrappers = getWrappersByIndex(indexOf(match));\n        var rng = editor.dom.createRng();\n        rng.setStartBefore(wrappers[0]);\n        rng.setEndAfter(wrappers[wrappers.length - 1]);\n        return rng;\n      };\n      var replace = function (match, text) {\n        var rng = rangeFromMatch(match);\n        rng.deleteContents();\n        if (text.length > 0) {\n          rng.insertNode(editor.dom.doc.createTextNode(text));\n        }\n        return rng;\n      };\n      function reset() {\n        matches.splice(0, matches.length);\n        unwrap();\n        return this;\n      }\n      var text = getText(node);\n      return {\n        text: text,\n        matches: matches,\n        each: each,\n        filter: filter,\n        reset: reset,\n        matchFromElement: matchFromElement,\n        elementFromMatch: elementFromMatch,\n        find: find,\n        add: add,\n        wrap: wrap,\n        unwrap: unwrap,\n        replace: replace,\n        rangeFromMatch: rangeFromMatch,\n        indexOf: indexOf\n      };\n    };\n\n    var getTextMatcher = function (editor, textMatcherState) {\n      if (!textMatcherState.get()) {\n        var textMatcher = DomTextMatcher(editor.getBody(), editor);\n        textMatcherState.set(textMatcher);\n      }\n      return textMatcherState.get();\n    };\n    var defaultSpellcheckCallback = function (editor, pluginUrl, currentLanguageState) {\n      return function (method, text, doneCallback, errorCallback) {\n        var data = {\n          method: method,\n          lang: currentLanguageState.get()\n        };\n        var postData = '';\n        data[method === 'addToDictionary' ? 'word' : 'text'] = text;\n        global$2.each(data, function (value, key) {\n          if (postData) {\n            postData += '&';\n          }\n          postData += key + '=' + encodeURIComponent(value);\n        });\n        global.send({\n          url: new global$1(pluginUrl).toAbsolute(getRpcUrl(editor)),\n          type: 'post',\n          content_type: 'application/x-www-form-urlencoded',\n          data: postData,\n          success: function (result) {\n            var parseResult = JSON.parse(result);\n            if (!parseResult) {\n              var message = editor.translate('Server response wasn\\'t proper JSON.');\n              errorCallback(message);\n            } else if (parseResult.error) {\n              errorCallback(parseResult.error);\n            } else {\n              doneCallback(parseResult);\n            }\n          },\n          error: function () {\n            var message = editor.translate('The spelling service was not found: (') + getRpcUrl(editor) + editor.translate(')');\n            errorCallback(message);\n          }\n        });\n      };\n    };\n    var sendRpcCall = function (editor, pluginUrl, currentLanguageState, name, data, successCallback, errorCallback) {\n      var userSpellcheckCallback = getSpellcheckerCallback(editor);\n      var spellCheckCallback = userSpellcheckCallback ? userSpellcheckCallback : defaultSpellcheckCallback(editor, pluginUrl, currentLanguageState);\n      spellCheckCallback.call(editor.plugins.spellchecker, name, data, successCallback, errorCallback);\n    };\n    var spellcheck = function (editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState) {\n      if (finish(editor, startedState, textMatcherState)) {\n        return;\n      }\n      var errorCallback = function (message) {\n        editor.notificationManager.open({\n          text: message,\n          type: 'error'\n        });\n        editor.setProgressState(false);\n        finish(editor, startedState, textMatcherState);\n      };\n      var successCallback = function (data) {\n        markErrors(editor, startedState, textMatcherState, lastSuggestionsState, data);\n      };\n      editor.setProgressState(true);\n      sendRpcCall(editor, pluginUrl, currentLanguageState, 'spellcheck', getTextMatcher(editor, textMatcherState).text, successCallback, errorCallback);\n      editor.focus();\n    };\n    var checkIfFinished = function (editor, startedState, textMatcherState) {\n      if (!editor.dom.select('span.mce-spellchecker-word').length) {\n        finish(editor, startedState, textMatcherState);\n      }\n    };\n    var addToDictionary = function (editor, pluginUrl, startedState, textMatcherState, currentLanguageState, word, spans) {\n      editor.setProgressState(true);\n      sendRpcCall(editor, pluginUrl, currentLanguageState, 'addToDictionary', word, function () {\n        editor.setProgressState(false);\n        editor.dom.remove(spans, true);\n        checkIfFinished(editor, startedState, textMatcherState);\n      }, function (message) {\n        editor.notificationManager.open({\n          text: message,\n          type: 'error'\n        });\n        editor.setProgressState(false);\n      });\n    };\n    var ignoreWord = function (editor, startedState, textMatcherState, word, spans, all) {\n      editor.selection.collapse();\n      if (all) {\n        global$2.each(editor.dom.select('span.mce-spellchecker-word'), function (span) {\n          if (span.getAttribute('data-mce-word') === word) {\n            editor.dom.remove(span, true);\n          }\n        });\n      } else {\n        editor.dom.remove(spans, true);\n      }\n      checkIfFinished(editor, startedState, textMatcherState);\n    };\n    var finish = function (editor, startedState, textMatcherState) {\n      var bookmark = editor.selection.getBookmark();\n      getTextMatcher(editor, textMatcherState).reset();\n      editor.selection.moveToBookmark(bookmark);\n      textMatcherState.set(null);\n      if (startedState.get()) {\n        startedState.set(false);\n        fireSpellcheckEnd(editor);\n        return true;\n      }\n    };\n    var getElmIndex = function (elm) {\n      var value = elm.getAttribute('data-mce-index');\n      if (typeof value === 'number') {\n        return '' + value;\n      }\n      return value;\n    };\n    var findSpansByIndex = function (editor, index) {\n      var spans = [];\n      var nodes = global$2.toArray(editor.getBody().getElementsByTagName('span'));\n      if (nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          var nodeIndex = getElmIndex(nodes[i]);\n          if (nodeIndex === null || !nodeIndex.length) {\n            continue;\n          }\n          if (nodeIndex === index.toString()) {\n            spans.push(nodes[i]);\n          }\n        }\n      }\n      return spans;\n    };\n    var markErrors = function (editor, startedState, textMatcherState, lastSuggestionsState, data) {\n      var hasDictionarySupport = !!data.dictionary;\n      var suggestions = data.words;\n      editor.setProgressState(false);\n      if (isEmpty(suggestions)) {\n        var message = editor.translate('No misspellings found.');\n        editor.notificationManager.open({\n          text: message,\n          type: 'info'\n        });\n        startedState.set(false);\n        return;\n      }\n      lastSuggestionsState.set({\n        suggestions: suggestions,\n        hasDictionarySupport: hasDictionarySupport\n      });\n      var bookmark = editor.selection.getBookmark();\n      getTextMatcher(editor, textMatcherState).find(getSpellcheckerWordcharPattern(editor)).filter(function (match) {\n        return !!suggestions[match.text];\n      }).wrap(function (match) {\n        return editor.dom.create('span', {\n          'class': 'mce-spellchecker-word',\n          'aria-invalid': 'spelling',\n          'data-mce-bogus': 1,\n          'data-mce-word': match.text\n        });\n      });\n      editor.selection.moveToBookmark(bookmark);\n      startedState.set(true);\n      fireSpellcheckStart(editor);\n    };\n\n    var get = function (editor, startedState, lastSuggestionsState, textMatcherState, currentLanguageState) {\n      var getWordCharPattern = function () {\n        return getSpellcheckerWordcharPattern(editor);\n      };\n      var markErrors$1 = function (data) {\n        markErrors(editor, startedState, textMatcherState, lastSuggestionsState, data);\n      };\n      return {\n        getTextMatcher: textMatcherState.get,\n        getWordCharPattern: getWordCharPattern,\n        markErrors: markErrors$1,\n        getLanguage: currentLanguageState.get\n      };\n    };\n\n    var register$1 = function (editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState) {\n      editor.addCommand('mceSpellCheck', function () {\n        spellcheck(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n      });\n    };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var spellcheckerEvents = 'SpellcheckStart SpellcheckEnd';\n    var buildMenuItems = function (listName, languageValues) {\n      var items = [];\n      global$2.each(languageValues, function (languageValue) {\n        items.push({\n          selectable: true,\n          text: languageValue.name,\n          data: languageValue.value\n        });\n      });\n      return items;\n    };\n    var getItems = function (editor) {\n      return global$2.map(getLanguages(editor).split(','), function (langPair) {\n        var langPairs = langPair.split('=');\n        return {\n          name: langPairs[0],\n          value: langPairs[1]\n        };\n      });\n    };\n    var register = function (editor, pluginUrl, startedState, textMatcherState, currentLanguageState, lastSuggestionsState) {\n      var languageMenuItems = buildMenuItems('Language', getItems(editor));\n      var startSpellchecking = function () {\n        spellcheck(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n      };\n      var buttonArgs = {\n        tooltip: 'Spellcheck',\n        onAction: startSpellchecking,\n        icon: 'spell-check',\n        onSetup: function (buttonApi) {\n          var setButtonState = function () {\n            buttonApi.setActive(startedState.get());\n          };\n          editor.on(spellcheckerEvents, setButtonState);\n          return function () {\n            editor.off(spellcheckerEvents, setButtonState);\n          };\n        }\n      };\n      var splitButtonArgs = __assign(__assign({}, buttonArgs), {\n        type: 'splitbutton',\n        select: function (value) {\n          return value === currentLanguageState.get();\n        },\n        fetch: function (callback) {\n          var items = global$2.map(languageMenuItems, function (languageItem) {\n            return {\n              type: 'choiceitem',\n              value: languageItem.data,\n              text: languageItem.text\n            };\n          });\n          callback(items);\n        },\n        onItemAction: function (splitButtonApi, value) {\n          currentLanguageState.set(value);\n        }\n      });\n      if (languageMenuItems.length > 1) {\n        editor.ui.registry.addSplitButton('spellchecker', splitButtonArgs);\n      } else {\n        editor.ui.registry.addToggleButton('spellchecker', buttonArgs);\n      }\n      editor.ui.registry.addToggleMenuItem('spellchecker', {\n        text: 'Spellcheck',\n        icon: 'spell-check',\n        onSetup: function (menuApi) {\n          menuApi.setActive(startedState.get());\n          var setMenuItemCheck = function () {\n            menuApi.setActive(startedState.get());\n          };\n          editor.on(spellcheckerEvents, setMenuItemCheck);\n          return function () {\n            editor.off(spellcheckerEvents, setMenuItemCheck);\n          };\n        },\n        onAction: startSpellchecking\n      });\n    };\n\n    var ignoreAll = true;\n    var getSuggestions = function (editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState, word, spans) {\n      var items = [];\n      var suggestions = lastSuggestionsState.get().suggestions[word];\n      global$2.each(suggestions, function (suggestion) {\n        items.push({\n          text: suggestion,\n          onAction: function () {\n            editor.insertContent(editor.dom.encode(suggestion));\n            editor.dom.remove(spans);\n            checkIfFinished(editor, startedState, textMatcherState);\n          }\n        });\n      });\n      var hasDictionarySupport = lastSuggestionsState.get().hasDictionarySupport;\n      if (hasDictionarySupport) {\n        items.push({ type: 'separator' });\n        items.push({\n          text: 'Add to dictionary',\n          onAction: function () {\n            addToDictionary(editor, pluginUrl, startedState, textMatcherState, currentLanguageState, word, spans);\n          }\n        });\n      }\n      items.push.apply(items, [\n        { type: 'separator' },\n        {\n          text: 'Ignore',\n          onAction: function () {\n            ignoreWord(editor, startedState, textMatcherState, word, spans);\n          }\n        },\n        {\n          text: 'Ignore all',\n          onAction: function () {\n            ignoreWord(editor, startedState, textMatcherState, word, spans, ignoreAll);\n          }\n        }\n      ]);\n      return items;\n    };\n    var setup = function (editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState) {\n      var update = function (element) {\n        var target = element;\n        if (target.className === 'mce-spellchecker-word') {\n          var spans = findSpansByIndex(editor, getElmIndex(target));\n          if (spans.length > 0) {\n            var rng = editor.dom.createRng();\n            rng.setStartBefore(spans[0]);\n            rng.setEndAfter(spans[spans.length - 1]);\n            editor.selection.setRng(rng);\n            return getSuggestions(editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState, target.getAttribute('data-mce-word'), spans);\n          }\n        } else {\n          return [];\n        }\n      };\n      editor.ui.registry.addContextMenu('spellchecker', { update: update });\n    };\n\n    function Plugin () {\n      global$3.add('spellchecker', function (editor, pluginUrl) {\n        if (hasProPlugin(editor) === false) {\n          var startedState = Cell(false);\n          var currentLanguageState = Cell(getLanguage(editor));\n          var textMatcherState = Cell(null);\n          var lastSuggestionsState = Cell(null);\n          register(editor, pluginUrl, startedState, textMatcherState, currentLanguageState, lastSuggestionsState);\n          setup(editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState);\n          register$1(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n          return get(editor, startedState, lastSuggestionsState, textMatcherState, currentLanguageState);\n        }\n      });\n    }\n\n    Plugin();\n\n}());\n"],"names":["Cell","initial","value","get","set","v","global$3","tinymce","util","Tools","resolve","hasProPlugin","editor","hasPlugin","window","console","log","hasOwnProperty","Object","global$2","global$1","global","getLanguage","defaultLanguage","getParam","getRpcUrl","getSpellcheckerWordcharPattern","defaultPattern","RegExp","isContentEditableFalse","node","nodeType","contentEditable","getTextMatcher","textMatcherState","textMatcher","m","matches","dom","blockElementsMap","schema","getBlockElements","hiddenTextElementsMap","getWhiteSpaceElements","shortEndedElementsMap","getShortEndedElements","createMatch","data","Error","start","index","end","length","text","getText","nodeName","txt","firstChild","nextSibling","stepThroughMatches","replaceFn","startNode","endNode","startNodeIndex","endNodeIndex","matchLocation","innerNodes","atIndex","curNode","matchIndex","slice","sort","a","b","shift","out","push","match","parentNode","genReplacer","callback","makeReplacementNode","fill","stencil","clone","cloneNode","setAttribute","appendChild","doc","createTextNode","range","before","after","node_1","substring","insertBefore","el","removeChild","elA","i","l","innerNode","innerEl","replaceChild","elB","unwrapElement","element","childNodes","getWrappersByIndex","elements","getElementsByTagName","wrappers","dataIndex","getAttribute","className","indexOf","each","this","unwrap","rangeFromMatch","rng","createRng","setStartBefore","setEndAfter","filter","filteredMatches","reset","splice","matchFromElement","elementFromMatch","find","regex","exec","add","substr","wrap","replace","deleteContents","insertNode","DomTextMatcher","getBody","sendRpcCall","pluginUrl","currentLanguageState","name","successCallback","errorCallback","userSpellcheckCallback","getSpellcheckerCallback","spellCheckCallback","method","doneCallback","lang","postData","key","encodeURIComponent","send","url","toAbsolute","type","content_type","success","result","parseResult","JSON","parse","error","message","translate","defaultSpellcheckCallback","call","plugins","spellchecker","spellcheck","startedState","lastSuggestionsState","finish","setProgressState","markErrors","notificationManager","open","focus","checkIfFinished","select","ignoreWord","word","spans","all","selection","collapse","span","remove","bookmark","getBookmark","moveToBookmark","fire","fireSpellcheckEnd","getElmIndex","elm","hasDictionarySupport","dictionary","suggestions","words","r","x","isEmpty","create","fireSpellcheckStart","getWordCharPattern","register$1","addCommand","__assign","assign","t","s","n","arguments","p","prototype","apply","spellcheckerEvents","register","languageValues","items","languageMenuItems","map","getLanguages","split","langPair","langPairs","getItems","languageValue","selectable","startSpellchecking","buttonArgs","tooltip","onAction","icon","onSetup","buttonApi","setButtonState","setActive","on","off","splitButtonArgs","fetch","languageItem","onItemAction","splitButtonApi","ui","registry","addSplitButton","addToggleButton","addToggleMenuItem","menuApi","setMenuItemCheck","getSuggestions","suggestion","insertContent","encode","addToDictionary","setup","addContextMenu","update","target","nodes","toArray","nodeIndex","toString","findSpansByIndex","setRng"],"sourceRoot":""}