Metadata-Version: 2.1
Name: fittie
Version: 0.1.1
Summary: FIT file tool
Author: Marcel Blijleven
Maintainer: Marcel Blijleven
License: MIT License
        
        Copyright (c) 2023 Marcel Blijleven
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/marcelblijleven/fittie
Project-URL: repository, https://github.com/marcelblijleven/fittie
Keywords: fit,fitfile,fitfile decode,decoding,garmin
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Provides-Extra: dev
License-File: LICENSE

# fittie

Parse Garmin .FIT files

## Usage

```python
from fittie.fitfile import decode

if __name__ == "__main__":
    with open("path/to/fit/file.fit", "rb") as data:
        fitfile = decode(data)
        
        # Example: get average heart rate
        print(fitfile.average_heart_rate)
```

### Debug

To print debug log messages, run your script with `LOGLEVEL=DEBUG` env variable.

## TODO:
 - Get values by native number instead of name
 - crc check
 - handle components, accumulators etc
 - handle chained FIT
 - compressed timestamps
 - move record_header into record, instead of reading it separately
 - encoding
