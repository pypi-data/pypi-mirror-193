Metadata-Version: 2.1
Name: rfcctl
Version: 0.1.0
Summary: RFC like documents management tool
Home-page: https://github.com/SiLeader/rfcctl
License: Apache-2.0
Keywords: document
Author: SiLeader
Author-email: sileader.dev@gmail.com
Requires-Python: >=3.9,<4.0
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: Documentation
Classifier: Topic :: Utilities
Requires-Dist: jinja2 (>=3.1.2,<4.0.0)
Project-URL: Repository, https://github.com/SiLeader/rfcctl
Description-Content-Type: text/markdown

# rfcctl: RFC like document manager

&cop; 2023 SiLeader.

## How to use
### 1. Add context
Add context to use `context add` subcommand.

```bash
rfcctl context add --name <CONTEXT_NAME> --user <USER NAME> /path/to/directory
```

- `--name` is context name alias
- `--user` is writer username
- `--switch` option is switch this context as default context
- `--initial-status` is RFC's initial status. default is Draft
- `--obsoleted-status` is obsoleted RFC's status. default is Obsoleted
- `--init` option is create `skeleton.md` in this directory

### 2. Create new RFC
Create new RFC file from `skeleton.md` to use `create` subcommand.

```bash
rfcctl create --category-tree <CATEGORY> <SUBCATEGORY in CATEGORY> ... --title 'My new RFC'
```

### 3. Update RFC metadata
Update RFC's obsoleted metadata to use `update` subcommand.

```bash
rfcctl update
```


## License
Apache License 2.0

See LICENSE
