# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import Common_pb2 as Common__pb2
from . import UdsOnDoIP_TP_pb2 as UdsOnDoIP__TP__pb2


class UdsOnDoIP_TPStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.subscribe = channel.unary_unary(
                '/UdsOnDoIP_TP.UdsOnDoIP_TP/subscribe',
                request_serializer=UdsOnDoIP__TP__pb2.node_info.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.set_IP = channel.unary_unary(
                '/UdsOnDoIP_TP.UdsOnDoIP_TP/set_IP',
                request_serializer=UdsOnDoIP__TP__pb2.ip_address.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.start_stack = channel.unary_unary(
                '/UdsOnDoIP_TP.UdsOnDoIP_TP/start_stack',
                request_serializer=Common__pb2.empty.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.stop_stack = channel.unary_unary(
                '/UdsOnDoIP_TP.UdsOnDoIP_TP/stop_stack',
                request_serializer=Common__pb2.empty.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.reset = channel.unary_unary(
                '/UdsOnDoIP_TP.UdsOnDoIP_TP/reset',
                request_serializer=Common__pb2.empty.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.generate_key = channel.unary_unary(
                '/UdsOnDoIP_TP.UdsOnDoIP_TP/generate_key',
                request_serializer=UdsOnDoIP__TP__pb2.request_para.SerializeToString,
                response_deserializer=UdsOnDoIP__TP__pb2.key_value_list.FromString,
                )


class UdsOnDoIP_TPServicer(object):
    """Missing associated documentation comment in .proto file."""

    def subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_IP(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def start_stack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stop_stack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def reset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def generate_key(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UdsOnDoIP_TPServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'subscribe': grpc.unary_unary_rpc_method_handler(
                    servicer.subscribe,
                    request_deserializer=UdsOnDoIP__TP__pb2.node_info.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'set_IP': grpc.unary_unary_rpc_method_handler(
                    servicer.set_IP,
                    request_deserializer=UdsOnDoIP__TP__pb2.ip_address.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'start_stack': grpc.unary_unary_rpc_method_handler(
                    servicer.start_stack,
                    request_deserializer=Common__pb2.empty.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'stop_stack': grpc.unary_unary_rpc_method_handler(
                    servicer.stop_stack,
                    request_deserializer=Common__pb2.empty.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'reset': grpc.unary_unary_rpc_method_handler(
                    servicer.reset,
                    request_deserializer=Common__pb2.empty.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'generate_key': grpc.unary_unary_rpc_method_handler(
                    servicer.generate_key,
                    request_deserializer=UdsOnDoIP__TP__pb2.request_para.FromString,
                    response_serializer=UdsOnDoIP__TP__pb2.key_value_list.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'UdsOnDoIP_TP.UdsOnDoIP_TP', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UdsOnDoIP_TP(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UdsOnDoIP_TP.UdsOnDoIP_TP/subscribe',
            UdsOnDoIP__TP__pb2.node_info.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_IP(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UdsOnDoIP_TP.UdsOnDoIP_TP/set_IP',
            UdsOnDoIP__TP__pb2.ip_address.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def start_stack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UdsOnDoIP_TP.UdsOnDoIP_TP/start_stack',
            Common__pb2.empty.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stop_stack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UdsOnDoIP_TP.UdsOnDoIP_TP/stop_stack',
            Common__pb2.empty.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UdsOnDoIP_TP.UdsOnDoIP_TP/reset',
            Common__pb2.empty.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def generate_key(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UdsOnDoIP_TP.UdsOnDoIP_TP/generate_key',
            UdsOnDoIP__TP__pb2.request_para.SerializeToString,
            UdsOnDoIP__TP__pb2.key_value_list.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
