# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import Common_pb2 as Common__pb2
from . import SomeIpNode_pb2 as SomeIpNode__pb2


class SomeIpNodeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartSomeIpStack = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/StartSomeIpStack',
                request_serializer=Common__pb2.net_info.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.StartSomeIpStackBypass = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/StartSomeIpStackBypass',
                request_serializer=Common__pb2.empty.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.StopSomeIpStack = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/StopSomeIpStack',
                request_serializer=Common__pb2.net_info.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.StopSomeIpStackBypass = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/StopSomeIpStackBypass',
                request_serializer=Common__pb2.empty.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.AddSomeIpArxml = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/AddSomeIpArxml',
                request_serializer=SomeIpNode__pb2.add_someip_arxml_request.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.AddIfaceInfo = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/AddIfaceInfo',
                request_serializer=Common__pb2.net_info.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.GetIfaceInfo = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/GetIfaceInfo',
                request_serializer=Common__pb2.net_info.SerializeToString,
                response_deserializer=Common__pb2.net_info.FromString,
                )
        self.GetArxmlToJson = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/GetArxmlToJson',
                request_serializer=Common__pb2.net_info.SerializeToString,
                response_deserializer=SomeIpNode__pb2.someip_arxml_json.FromString,
                )
        self.UpdateSomeipServiceConfig = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/UpdateSomeipServiceConfig',
                request_serializer=SomeIpNode__pb2.service_tag.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.Reset = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/Reset',
                request_serializer=Common__pb2.empty.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.SomeipCallSync = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/SomeipCallSync',
                request_serializer=SomeIpNode__pb2.someip_call_context.SerializeToString,
                response_deserializer=SomeIpNode__pb2.someip_response_context.FromString,
                )
        self.GetSomeipStackStatus = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/GetSomeipStackStatus',
                request_serializer=Common__pb2.net_info.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.GetAllSomeipStackStatus = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/GetAllSomeipStackStatus',
                request_serializer=Common__pb2.empty.SerializeToString,
                response_deserializer=SomeIpNode__pb2.someip_stack_statuses.FromString,
                )
        self.GetAllOfferService = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/GetAllOfferService',
                request_serializer=Common__pb2.net_info.SerializeToString,
                response_deserializer=SomeIpNode__pb2.someip_service_infos.FromString,
                )
        self.GetServiceStates = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/GetServiceStates',
                request_serializer=Common__pb2.net_info.SerializeToString,
                response_deserializer=SomeIpNode__pb2.service_states.FromString,
                )
        self.StartLog = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/StartLog',
                request_serializer=SomeIpNode__pb2.log_request.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.StopLog = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/StopLog',
                request_serializer=SomeIpNode__pb2.log_request.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.GetLogStatus = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/GetLogStatus',
                request_serializer=SomeIpNode__pb2.log_request.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.ConvertSomeipDbToJson = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/ConvertSomeipDbToJson',
                request_serializer=SomeIpNode__pb2.convert_input.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )
        self.ConvertSomeipDbToPy = channel.unary_unary(
                '/SomeIpNode.SomeIpNode/ConvertSomeipDbToPy',
                request_serializer=SomeIpNode__pb2.convert_input.SerializeToString,
                response_deserializer=Common__pb2.result.FromString,
                )


class SomeIpNodeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartSomeIpStack(self, request, context):
        """开启 SomeIp 协议栈 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartSomeIpStackBypass(self, request, context):
        """开启 SomeIp 协议栈 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopSomeIpStack(self, request, context):
        """停止 SomeIp 协议栈 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopSomeIpStackBypass(self, request, context):
        """停止 SomeipStackBypass 协议栈
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddSomeIpArxml(self, request, context):
        """添加 SomeIpArxml 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddIfaceInfo(self, request, context):
        """添加网卡信息，仅给界面调用 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIfaceInfo(self, request, context):
        """获取网卡信息，仅给界面调用 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetArxmlToJson(self, request, context):
        """获取后台正在使用的 Arxml dict 修改返回
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSomeipServiceConfig(self, request, context):
        """获取所有的 Service 信息，这个函数废弃了
        rpc GetSomeIpServiceInfos (Common.empty) returns (someip_info) {}

        更新 Someip service 的配置信息 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
        """复位
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SomeipCallSync(self, request, context):
        """同步发送Someip Call 不需要修改数据结构，但是需要修改逻辑，在 client 端的 someipPackage 中添加 channel 的信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSomeipStackStatus(self, request, context):
        """获取 Someip 协议栈状态 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllSomeipStackStatus(self, request, context):
        """获取所有 SomeipStack Status 的状态 新增函数，需要实现
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllOfferService(self, request, context):
        """获取当前网段存在的服务 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceStates(self, request, context):
        """获取当前服务状态列表 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartLog(self, request, context):
        """启动数据录制 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopLog(self, request, context):
        """停止数据录制 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLogStatus(self, request, context):
        """获取当前数据记录任务的状态 修改入参
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConvertSomeipDbToJson(self, request, context):
        """转换 SomeipDB 文件到 Json
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConvertSomeipDbToPy(self, request, context):
        """转换 SomeipDB 文件到 Py
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SomeIpNodeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartSomeIpStack': grpc.unary_unary_rpc_method_handler(
                    servicer.StartSomeIpStack,
                    request_deserializer=Common__pb2.net_info.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'StartSomeIpStackBypass': grpc.unary_unary_rpc_method_handler(
                    servicer.StartSomeIpStackBypass,
                    request_deserializer=Common__pb2.empty.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'StopSomeIpStack': grpc.unary_unary_rpc_method_handler(
                    servicer.StopSomeIpStack,
                    request_deserializer=Common__pb2.net_info.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'StopSomeIpStackBypass': grpc.unary_unary_rpc_method_handler(
                    servicer.StopSomeIpStackBypass,
                    request_deserializer=Common__pb2.empty.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'AddSomeIpArxml': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSomeIpArxml,
                    request_deserializer=SomeIpNode__pb2.add_someip_arxml_request.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'AddIfaceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.AddIfaceInfo,
                    request_deserializer=Common__pb2.net_info.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'GetIfaceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIfaceInfo,
                    request_deserializer=Common__pb2.net_info.FromString,
                    response_serializer=Common__pb2.net_info.SerializeToString,
            ),
            'GetArxmlToJson': grpc.unary_unary_rpc_method_handler(
                    servicer.GetArxmlToJson,
                    request_deserializer=Common__pb2.net_info.FromString,
                    response_serializer=SomeIpNode__pb2.someip_arxml_json.SerializeToString,
            ),
            'UpdateSomeipServiceConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSomeipServiceConfig,
                    request_deserializer=SomeIpNode__pb2.service_tag.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=Common__pb2.empty.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'SomeipCallSync': grpc.unary_unary_rpc_method_handler(
                    servicer.SomeipCallSync,
                    request_deserializer=SomeIpNode__pb2.someip_call_context.FromString,
                    response_serializer=SomeIpNode__pb2.someip_response_context.SerializeToString,
            ),
            'GetSomeipStackStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSomeipStackStatus,
                    request_deserializer=Common__pb2.net_info.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'GetAllSomeipStackStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllSomeipStackStatus,
                    request_deserializer=Common__pb2.empty.FromString,
                    response_serializer=SomeIpNode__pb2.someip_stack_statuses.SerializeToString,
            ),
            'GetAllOfferService': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllOfferService,
                    request_deserializer=Common__pb2.net_info.FromString,
                    response_serializer=SomeIpNode__pb2.someip_service_infos.SerializeToString,
            ),
            'GetServiceStates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceStates,
                    request_deserializer=Common__pb2.net_info.FromString,
                    response_serializer=SomeIpNode__pb2.service_states.SerializeToString,
            ),
            'StartLog': grpc.unary_unary_rpc_method_handler(
                    servicer.StartLog,
                    request_deserializer=SomeIpNode__pb2.log_request.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'StopLog': grpc.unary_unary_rpc_method_handler(
                    servicer.StopLog,
                    request_deserializer=SomeIpNode__pb2.log_request.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'GetLogStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLogStatus,
                    request_deserializer=SomeIpNode__pb2.log_request.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'ConvertSomeipDbToJson': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertSomeipDbToJson,
                    request_deserializer=SomeIpNode__pb2.convert_input.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
            'ConvertSomeipDbToPy': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertSomeipDbToPy,
                    request_deserializer=SomeIpNode__pb2.convert_input.FromString,
                    response_serializer=Common__pb2.result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SomeIpNode.SomeIpNode', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SomeIpNode(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartSomeIpStack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/StartSomeIpStack',
            Common__pb2.net_info.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartSomeIpStackBypass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/StartSomeIpStackBypass',
            Common__pb2.empty.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopSomeIpStack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/StopSomeIpStack',
            Common__pb2.net_info.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopSomeIpStackBypass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/StopSomeIpStackBypass',
            Common__pb2.empty.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddSomeIpArxml(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/AddSomeIpArxml',
            SomeIpNode__pb2.add_someip_arxml_request.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddIfaceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/AddIfaceInfo',
            Common__pb2.net_info.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIfaceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/GetIfaceInfo',
            Common__pb2.net_info.SerializeToString,
            Common__pb2.net_info.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetArxmlToJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/GetArxmlToJson',
            Common__pb2.net_info.SerializeToString,
            SomeIpNode__pb2.someip_arxml_json.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSomeipServiceConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/UpdateSomeipServiceConfig',
            SomeIpNode__pb2.service_tag.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/Reset',
            Common__pb2.empty.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SomeipCallSync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/SomeipCallSync',
            SomeIpNode__pb2.someip_call_context.SerializeToString,
            SomeIpNode__pb2.someip_response_context.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSomeipStackStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/GetSomeipStackStatus',
            Common__pb2.net_info.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllSomeipStackStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/GetAllSomeipStackStatus',
            Common__pb2.empty.SerializeToString,
            SomeIpNode__pb2.someip_stack_statuses.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllOfferService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/GetAllOfferService',
            Common__pb2.net_info.SerializeToString,
            SomeIpNode__pb2.someip_service_infos.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceStates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/GetServiceStates',
            Common__pb2.net_info.SerializeToString,
            SomeIpNode__pb2.service_states.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/StartLog',
            SomeIpNode__pb2.log_request.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/StopLog',
            SomeIpNode__pb2.log_request.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLogStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/GetLogStatus',
            SomeIpNode__pb2.log_request.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConvertSomeipDbToJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/ConvertSomeipDbToJson',
            SomeIpNode__pb2.convert_input.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConvertSomeipDbToPy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SomeIpNode.SomeIpNode/ConvertSomeipDbToPy',
            SomeIpNode__pb2.convert_input.SerializeToString,
            Common__pb2.result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
