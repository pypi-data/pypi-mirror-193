{"version":3,"file":"js/module_categories.management.7841fa7c.bundle.js","mappings":"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","sources":["webpack:///indico/modules/categories/client/js/management.js"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\n/* global paginatedSelectAll:false, handleAjaxError:false, cornerMessage:false,\n          enableIfChecked:false, build_url:false, ajaxDialog:false, updateHtml:false */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {SingleEventMove, BulkEventMove} from 'indico/modules/events/management/EventMove';\nimport {showUserSearch} from 'indico/react/components/principals/imperative';\nimport {$T} from 'indico/utils/i18n';\nimport {natSortCompare} from 'indico/utils/sort';\n\n(function(global) {\n  // Category cache\n  const _categories = {};\n\n  global.setupCategoryMoveButton = function setupCategoryMoveButton(parentCategoryId) {\n    if (parentCategoryId) {\n      _fetchSourceCategory(parentCategoryId);\n    }\n    $('.js-move-category').on('click', function() {\n      const $this = $(this);\n      _moveCategories(\n        [$this.data('categoryId')],\n        _categories[parentCategoryId],\n        $this.data('href')\n      );\n    });\n  };\n\n  global.setupCategoryTable = function setupCategoryTable(categoryId) {\n    _fetchSourceCategory(categoryId);\n    const $table = $('table.category-management');\n    const $tbody = $table.find('tbody');\n    const $bulkDeleteButton = $('.js-bulk-delete-category');\n    const $bulkMoveButton = $('.js-bulk-move-category');\n    const categoryRowSelector = 'tr[data-category-id]';\n    const checkboxSelector = 'input[name=category_id]';\n\n    $('.js-sort-categories').on('click', function() {\n      const sortOrder = $(this).data('sort-order');\n      const currentOrder = getSortedCategories();\n      function undo() {\n        restoreCategoryOrder(currentOrder);\n        return setOrderAjax(currentOrder);\n      }\n      sortCategories(sortOrder);\n      setOrderAjax(getSortedCategories());\n      cornerMessage({\n        actionLabel: $T.gettext('Undo'),\n        actionCallback: undo,\n        feedbackMessage: $T.gettext('The category order has been restored.'),\n        duration: 10000,\n        message: $T.gettext('The category list has been sorted.'),\n      });\n    });\n\n    $bulkMoveButton.on('click', function(evt) {\n      const $this = $(this);\n      evt.preventDefault();\n      if ($this.hasClass('disabled')) {\n        return;\n      }\n      _moveCategories(getSelectedCategories(), _categories[categoryId], $this.data('href'));\n    });\n\n    $table.find('.js-move-category').on('click', function() {\n      const $this = $(this);\n      _moveCategories([$this.data('categoryId')], _categories[categoryId], $this.data('href'));\n    });\n\n    $table.find('.js-delete-category').on('indico:confirmed', function(evt) {\n      evt.preventDefault();\n      const $this = $(this);\n      $.ajax({\n        url: $this.data('href'),\n        method: 'POST',\n        error: handleAjaxError,\n        success(data) {\n          $this.closest(categoryRowSelector).remove();\n          updateCategoryDeleteButton(data.is_parent_empty);\n        },\n      });\n    });\n\n    enableIfChecked($tbody, checkboxSelector, $bulkDeleteButton, function($checkboxes) {\n      return $checkboxes.filter(':not([data-is-empty=true])').length === 0;\n    });\n    $bulkDeleteButton.on('click', bulkDeleteCategories).qtip({\n      suppress: false,\n      content: {\n        text: getBulkDeleteButtonTooltipContent,\n      },\n    });\n\n    enableIfChecked($tbody, checkboxSelector, $bulkMoveButton);\n    $bulkMoveButton.qtip({\n      suppress: false,\n      content: {\n        text: getBulkMoveButtonTooltipContent,\n      },\n    });\n\n    $tbody.sortable({\n      axis: 'y',\n      containment: 'parent',\n      cursor: 'move',\n      handle: '.js-handle',\n      items: '> tr',\n      tolerance: 'pointer',\n      update() {\n        setOrderAjax(getSortedCategories());\n      },\n    });\n\n    function getSortedCategories() {\n      return $tbody\n        .find(categoryRowSelector)\n        .map(function() {\n          return $(this).data('category-id');\n        })\n        .toArray();\n    }\n\n    function restoreCategoryOrder(order) {\n      $.each(order, function(index, id) {\n        $tbody\n          .find(`[data-category-id=${id}]`)\n          .not('.js-move-category')\n          .detach()\n          .appendTo($tbody);\n      });\n    }\n\n    function compareCategories(a, b) {\n      const cmp = natSortCompare(a.title.toLowerCase(), b.title.toLowerCase());\n      if (cmp === 0) {\n        return a.id < b.id ? -1 : 1;\n      }\n      return cmp;\n    }\n\n    function sortCategories(sortOrder) {\n      $tbody\n        .find(categoryRowSelector)\n        .sort(function(a, b) {\n          [a, b] = [$(a), $(b)];\n          return (\n            sortOrder *\n            compareCategories(\n              {title: a.data('category-title'), id: a.data('category-id')},\n              {title: b.data('category-title'), id: b.data('category-id')}\n            )\n          );\n        })\n        .detach()\n        .appendTo($tbody);\n    }\n\n    function setOrderAjax(order) {\n      return $.ajax({\n        url: $table.data('sort-url'),\n        method: 'POST',\n        data: JSON.stringify({\n          categories: order,\n        }),\n        dataType: 'json',\n        contentType: 'application/json',\n        error: handleAjaxError,\n      });\n    }\n\n    function updateCategoryDeleteButton(enabled) {\n      if (enabled) {\n        $('.banner .js-delete-category')\n          .removeClass('disabled')\n          .attr('title', $T.gettext('Delete category'));\n      } else {\n        $('.banner .js-delete-category')\n          .addClass('disabled')\n          .attr('title', $T.gettext('This category cannot be deleted because it is not empty.'));\n      }\n    }\n\n    function getBulkDeleteButtonTooltipContent() {\n      const $checked = getSelectedRows();\n      if ($checked.length) {\n        if ($bulkDeleteButton.hasClass('disabled')) {\n          return $T.gettext(\n            'At least one selected category cannot be deleted because it is not empty.'\n          );\n        } else {\n          return $T\n            .ngettext(\n              'Delete the selected category',\n              'Delete {0} selected categories',\n              $checked.length\n            )\n            .format($checked.length);\n        }\n      } else {\n        return $T.gettext('Select the categories to delete first.');\n      }\n    }\n\n    function bulkDeleteCategories() {\n      const $selectedRows = getSelectedRows();\n      ajaxDialog({\n        url: $table.data('bulk-delete-url'),\n        method: 'POST',\n        title: $T.gettext('Delete categories'),\n        data: {\n          category_id: getSelectedCategories(),\n        },\n        onClose(data) {\n          if (data && data.success) {\n            // Prevent other categories from being selected when someone reloads\n            // the page after deleting a selected category.\n            $selectedRows.find('input[type=checkbox]').prop('checked', false);\n            $selectedRows.remove();\n            updateCategoryDeleteButton(data.is_empty);\n          }\n        },\n      });\n    }\n\n    function getBulkMoveButtonTooltipContent() {\n      const $checked = getSelectedRows();\n      if ($checked.length) {\n        return $T\n          .ngettext(\n            'Move the selected category',\n            'Move the {0} selected categories',\n            $checked.length\n          )\n          .format($checked.length);\n      } else {\n        return $T.gettext('Select the categories to move first.');\n      }\n    }\n\n    function getSelectedCategories() {\n      return $table\n        .find(categoryRowSelector)\n        .find(`${checkboxSelector}:checked`)\n        .map(function() {\n          return this.value;\n        })\n        .toArray();\n    }\n\n    function getSelectedRows() {\n      return $table.find(categoryRowSelector).has(`${checkboxSelector}:checked`);\n    }\n  };\n\n  global.setupCategoryEventList = function setupCategoryEventList(categoryId) {\n    const isEverythingSelected = paginatedSelectAll({\n      containerSelector: '#event-management',\n      checkboxSelector: 'input:checkbox[name=event_id]',\n      allSelectedSelector: 'input:checkbox[name=all_selected]',\n      selectionMessageSelector: '#selection-message',\n      totalRows: $('#event-management').data('total'),\n      messages: {\n        allSelected(total) {\n          return $T\n            .ngettext('*', 'All {0} events in this category are currently selected.')\n            .format(total);\n        },\n        pageSelected(selected, total) {\n          return $T\n            .ngettext(\n              'Only {0} out of {1} events is currently selected.',\n              'Only {0} out of {1} events are currently selected.',\n              selected\n            )\n            .format(selected, total);\n        },\n      },\n    }).isEverythingSelected;\n\n    _fetchSourceCategory(categoryId);\n\n    [].forEach.call(\n      document.querySelectorAll('.js-move-event-to-subcategory-container'),\n      moveContainer => {\n        ReactDOM.render(\n          React.createElement(SingleEventMove, {\n            eventId: +moveContainer.dataset.eventId,\n            currentCategoryId: categoryId,\n            hasPendingMoveRequest: moveContainer.dataset.pendingRequest !== undefined,\n            inCategoryManagement: true,\n          }),\n          moveContainer\n        );\n      }\n    );\n\n    const bulkMoveContainer = document.querySelector('#js-move-events-to-subcategory-container');\n    ReactDOM.render(\n      React.createElement(BulkEventMove, {\n        currentCategoryId: categoryId,\n        getEventData: () => {\n          const allSelected = isEverythingSelected();\n          const eventIds = [].map.call(\n            document.querySelectorAll(\n              '#event-management input[name=event_id][type=checkbox]:checked'\n            ),\n            o => o.value\n          );\n          return {\n            allSelected,\n            eventIds: allSelected ? null : eventIds,\n            eventCount: allSelected ? $('#event-management').data('total') : eventIds.length,\n          };\n        },\n      }),\n      bulkMoveContainer\n    );\n\n    enableIfChecked('#event-management', 'input[name=event_id]', '.js-enabled-if-checked');\n  };\n\n  function _fetchSourceCategory(categoryId) {\n    if (_categories[categoryId] === undefined) {\n      _categories[categoryId] = categoryId;\n      $.ajax({\n        url: build_url(Indico.Urls.Categories.info, {category_id: categoryId}),\n        dataType: 'json',\n        error(xhr) {\n          // XXX: Re-enable error handling once we skip retrieving protected parents\n          if (xhr.status && xhr.status !== 403) {\n            handleAjaxError(xhr);\n          }\n        },\n        success(data) {\n          _categories[categoryId] = data;\n        },\n      });\n    }\n  }\n\n  function _moveCategories(ids, source, endpoint) {\n    const sourceId = _.isObject(source) ? source.category.id : source;\n    const data = {category_id: ids};\n\n    $('<div>').categorynavigator({\n      category: source,\n      confirmation: true,\n      openInDialog: true,\n      actionButtonText: $T.gettext('Move here'),\n      dialogTitle: $T.ngettext('Move category', 'Move categories', ids.length),\n      dialogSubtitle: $T\n        .ngettext(\n          'Select new category parent for the category',\n          'Select new category parent for {0} selected categories',\n          ids.length\n        )\n        .format(ids.length),\n      actionOn: {\n        categoriesDescendingFrom: {\n          disabled: true,\n          ids,\n        },\n        categories: {\n          disabled: true,\n          groups: [\n            {\n              ids: [sourceId],\n              message: $T.ngettext(\n                'The category is already here',\n                'The selected categories are already here',\n                ids.length\n              ),\n            },\n            {\n              ids,\n              message: $T.ngettext(\n                'This is the category you are trying to move',\n                'This is one of the categories you are trying to move',\n                ids.length\n              ),\n            },\n          ],\n        },\n      },\n      onAction(category) {\n        $.ajax({\n          url: endpoint,\n          type: 'POST',\n          data: $.extend({target_category_id: category.id}, data),\n          error: handleAjaxError,\n          success(data) {\n            if (data.success) {\n              location.reload();\n            }\n          },\n        });\n      },\n    });\n  }\n\n  function setupRolesToggle() {\n    const $roles = $('#event-roles');\n    $roles.on('click', '.toggle-members', function() {\n      const $row = $(this)\n        .closest('tr')\n        .next('tr')\n        .find('.slide');\n      $row.css('max-height', `${$row[0].scrollHeight}px`);\n      $row.toggleClass('open close');\n    });\n\n    $roles.on('indico:htmlUpdated', function() {\n      $(this)\n        .find('.slide')\n        .each(function() {\n          $(this).css('max-height', `${this.scrollHeight}px`);\n        });\n    });\n  }\n\n  function setupRolesButtons() {\n    $('#event-roles').on('click', '.js-add-members', async evt => {\n      evt.stopPropagation();\n      const $this = $(evt.target);\n      const users = await showUserSearch({withExternalUsers: true});\n      if (users.length) {\n        $.ajax({\n          url: $this.data('href'),\n          method: $this.data('method'),\n          data: JSON.stringify({users}),\n          dataType: 'json',\n          contentType: 'application/json',\n          error: handleAjaxError,\n          complete: IndicoUI.Dialogs.Util.progress(),\n          success(data) {\n            updateHtml($this.data('update'), data);\n          },\n        });\n      }\n    });\n  }\n\n  global.setupCategoryRolesList = function setupCategoryRolesList() {\n    setupRolesToggle();\n    setupRolesButtons();\n  };\n})(window);\n"],"names":["global","_categories","_fetchSourceCategory","categoryId","undefined","$","ajax","url","build_url","Indico","Urls","Categories","info","category_id","dataType","error","xhr","status","handleAjaxError","success","data","_moveCategories","ids","source","endpoint","sourceId","category","id","categorynavigator","confirmation","openInDialog","actionButtonText","$T","dialogTitle","length","dialogSubtitle","format","actionOn","categoriesDescendingFrom","disabled","categories","groups","message","onAction","type","extend","target_category_id","location","reload","setupCategoryMoveButton","parentCategoryId","on","$this","this","setupCategoryTable","$table","$tbody","find","$bulkDeleteButton","$bulkMoveButton","categoryRowSelector","checkboxSelector","getSortedCategories","map","toArray","setOrderAjax","order","method","JSON","stringify","contentType","updateCategoryDeleteButton","enabled","removeClass","attr","addClass","getSelectedCategories","value","getSelectedRows","has","sortOrder","currentOrder","sort","a","b","cmp","natSortCompare","title","toLowerCase","compareCategories","detach","appendTo","sortCategories","cornerMessage","actionLabel","actionCallback","each","index","not","feedbackMessage","duration","evt","preventDefault","hasClass","closest","remove","is_parent_empty","enableIfChecked","$checkboxes","filter","$selectedRows","ajaxDialog","onClose","prop","is_empty","qtip","suppress","content","text","$checked","sortable","axis","containment","cursor","handle","items","tolerance","update","setupCategoryEventList","isEverythingSelected","paginatedSelectAll","containerSelector","allSelectedSelector","selectionMessageSelector","totalRows","messages","allSelected","total","pageSelected","selected","forEach","call","document","querySelectorAll","moveContainer","ReactDOM","React","SingleEventMove","eventId","dataset","currentCategoryId","hasPendingMoveRequest","pendingRequest","inCategoryManagement","bulkMoveContainer","querySelector","BulkEventMove","getEventData","eventIds","o","eventCount","setupCategoryRolesList","$roles","$row","next","css","scrollHeight","toggleClass","setupRolesToggle","async","stopPropagation","target","users","showUserSearch","withExternalUsers","complete","IndicoUI","Dialogs","Util","progress","updateHtml","window"],"sourceRoot":""}