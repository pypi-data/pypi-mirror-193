{"version":3,"file":"js/module_events.creation.cf14c9c2.bundle.js","mappings":"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","sources":["webpack:///indico/modules/events/client/js/creation.js"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\n/* global handleAjaxError:false */\n\nimport checkRoomAvailabilityURL from 'indico-url:rb.check_room_available';\nimport rbURL from 'indico-url:rb.roombooking';\n\nimport moment from 'moment';\n\nimport {camelizeKeys} from 'indico/utils/case';\n\n/* eslint-disable import/unambiguous */\n(function(global) {\n  global.setupEventCreationDialog = function setupEventCreationDialog(options) {\n    options = $.extend(\n      {\n        categoryField: null,\n        listingValue: null,\n        protectionModeFields: null,\n        initialCategory: null,\n        checkAvailability: false,\n        rbExcludedCategories: null,\n        serverDefaultTimezone: null,\n      },\n      options\n    );\n\n    const messages = $($.parseHTML($('#event-creation-protection-messages').html()));\n    const protectionMessage = $('<div>', {class: 'form-group', css: {marginTop: '5px'}});\n    const listingMessage = $($.parseHTML($('#event-listing-message').html()));\n    const eventCreationMessage = $($.parseHTML($('#event-creation-message').html()));\n\n    const $form = options.categoryField.closest('form');\n    const $submitBtn = $form.find('input[type=\"submit\"]').first();\n    const $createBooking = $('#event-creation-create_booking');\n    const $availableMessage = $('#room-available');\n    const $availablePrebookMessage = $('#room-available-prebook');\n    const $conflictBookingMessage = $('#room-conflict-booking');\n    const $conflictPrebookingMessage = $('#room-conflict-prebooking');\n    const $conflictPrebookingPrebookMessage = $('#room-conflict-prebooking-prebook');\n    const $userBookingMessage = $('#room-user-booking');\n    const $userPrebookingMessage = $('#room-user-prebooking');\n    const $unbookableMessage = $('#room-unbookable');\n    const $cannotBookMessage = $('#room-cannot-book');\n    const $bookingSwitch = $('#create-booking');\n    const $prebookingSwitch = $('#create-prebooking');\n    const $bookingSwitchPrebooking = $('#create-booking-over-prebooking');\n    const $prebookingSwitchPrebooking = $('#create-prebooking-over-prebooking');\n    const $listingField = $('#event-creation-listing-checkbox');\n\n    let currentCategory = null;\n    let previousRoomId, $currentMessage, startDt, endDt, category, roomData, timezone;\n    let multipleOccurrences = false;\n\n    protectionMessage.appendTo(options.protectionModeFields.closest('.form-field'));\n    eventCreationMessage.insertAfter($('#category-warning-event-creation-category'));\n    listingMessage.appendTo($listingField.closest('.form-field'));\n\n    $submitBtn.prop('disabled', true);\n    $form.on('change input', updateSubmitBtn);\n\n    function canCreateInSelectedCategory() {\n      return (\n        options.canCreateEvents ||\n        // unlisted events or no default category\n        !currentCategory ||\n        // categories other than the initial one cannot be selected unless the user can create events in them\n        currentCategory?.id !== options.initialCategory?.id\n      );\n    }\n\n    // like disabled-until-change but also disables submit when the user\n    // does not have the rights to create events in the selected category\n    function updateSubmitBtn() {\n      const untouched = $.param($form.serializeArray(), true) === $form.data('initialData');\n      const disabled = untouched || !canCreateInSelectedCategory();\n      $submitBtn.prop('disabled', disabled);\n    }\n\n    function updateProtectionMessage() {\n      if (!currentCategory) {\n        protectionMessage.html('');\n        return;\n      }\n      let mode = options.protectionModeFields.filter(':checked').val();\n      if (mode === 'inheriting') {\n        mode = currentCategory.is_protected ? 'inheriting-protected' : 'inheriting-public';\n      }\n      const elem = messages.filter(`.${mode}-protection-message`);\n      elem.find('.js-category-title').text(currentCategory && currentCategory.title);\n      protectionMessage.html(elem);\n    }\n\n    // Display a warning if the user does not have the rights to create events in the selected category\n    function updateEventCreationMessage() {\n      eventCreationMessage.toggleClass('hidden', canCreateInSelectedCategory());\n    }\n\n    options.categoryField.on('indico:categorySelected', (evt, cat) => {\n      if (!currentCategory) {\n        options.protectionModeFields.filter('[value=inheriting]').prop('checked', true);\n      }\n      if (cat) {\n        options.protectionModeFields.prop('disabled', false);\n      } else {\n        options.protectionModeFields.prop('disabled', true);\n        options.protectionModeFields.filter('[value=inheriting]').prop('checked', true);\n      }\n      currentCategory = cat;\n      updateProtectionMessage();\n      updateEventCreationMessage();\n      updateSubmitBtn();\n    });\n\n    $listingField.on('change', evt => {\n      const value = JSON.parse(evt.target.value);\n      if (value) {\n        $('#form-group-event-creation-category').show();\n        $('#form-group-event-creation-protection_mode').show();\n        options.categoryField.val(JSON.stringify(options.initialCategory));\n        options.categoryField.trigger('indico:categorySelected', [options.initialCategory]);\n        $('#category-title-event-creation-category').text(\n          options.initialCategory ? options.initialCategory.title : ''\n        );\n      } else {\n        $('#form-group-event-creation-category').hide();\n        $('#form-group-event-creation-protection_mode').hide();\n        options.categoryField.trigger('indico:categorySelected', []);\n      }\n\n      // update listing\n      listingMessage.toggleClass('hidden', JSON.parse($listingField.val()));\n    });\n\n    options.protectionModeFields.on('change', function() {\n      updateProtectionMessage();\n    });\n\n    if (options.initialCategory) {\n      options.categoryField.trigger('indico:categorySelected', [options.initialCategory]);\n    } else {\n      options.protectionModeFields.prop('disabled', true);\n    }\n\n    function setLectureTimes(occurrence) {\n      startDt = moment(`${occurrence['date']} ${occurrence['time']}`, 'YYYY-MM-DD HH:mm');\n      endDt = moment(startDt).add(occurrence['duration'], 'minutes');\n    }\n\n    function initAvailabilityValues() {\n      const startDate = $('#event-creation-start_dt-datestorage').val();\n      const startTime = $('#event-creation-start_dt-timestorage').val();\n      const endDate = $('#event-creation-end_dt-datestorage').val();\n      const endTime = $('#event-creation-end_dt-timestorage').val();\n      const occurrencesVal = $('#event-creation-occurrences').val();\n      const occurrences = occurrencesVal ? JSON.parse(occurrencesVal) : null;\n\n      roomData = JSON.parse($('#event-creation-location_data').val());\n      timezone = $('#event-creation-timezone').val();\n      category = JSON.parse($('#event-creation-category').val());\n\n      if (occurrences && occurrences.length === 1) {\n        setLectureTimes(occurrences[0]);\n      } else {\n        startDt = moment(`${startDate} ${startTime}`, 'DD/MM/YYYY HH:mm');\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n      }\n    }\n\n    function isCategoryExcluded(categoryId) {\n      return options.rbExcludedCategories.some(excludedCategory => {\n        return parseInt(excludedCategory.id, 10) === categoryId;\n      });\n    }\n\n    function addCalendarLink($message) {\n      const params = {\n        path: 'calendar',\n        date: startDt.format('YYYY-MM-DD'),\n        text: roomData['room_name'],\n      };\n      const url = rbURL(params);\n      $message.find('a').prop('href', url);\n    }\n\n    function hideAvailability(resetCheckbox) {\n      if ($currentMessage) {\n        if (resetCheckbox) {\n          $('#availability-messages')\n            .find(\"input[id^='create']\")\n            .prop('checked', false);\n          $createBooking.val('false');\n        }\n        $currentMessage.hide();\n      }\n    }\n\n    function updateAvailability(resetCheckbox = false) {\n      hideAvailability(resetCheckbox);\n\n      if (\n        !('room_id' in roomData) ||\n        !startDt.isValid() ||\n        !endDt.isValid() ||\n        !startDt.isSame(endDt, 'day') ||\n        startDt.isSameOrAfter(endDt) ||\n        isCategoryExcluded(category['id']) ||\n        timezone !== options.serverDefaultTimezone ||\n        multipleOccurrences\n      ) {\n        $createBooking.val('false');\n        return;\n      }\n\n      const requestParams = {\n        room_id: roomData['room_id'],\n        start_dt: startDt.format(moment.HTML5_FMT.DATETIME_LOCAL),\n        end_dt: endDt.format(moment.HTML5_FMT.DATETIME_LOCAL),\n      };\n\n      $.ajax({\n        url: checkRoomAvailabilityURL(requestParams),\n        method: 'GET',\n        dataType: 'json',\n        contentType: 'application/json',\n        error: handleAjaxError,\n        success(data) {\n          data = camelizeKeys(data);\n          if (data.userBooking) {\n            $createBooking.val('false');\n            $currentMessage = $userBookingMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.userPrebooking) {\n            $createBooking.val('false');\n            $currentMessage = $userPrebookingMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.conflictBooking) {\n            $createBooking.val('false');\n            $currentMessage = $conflictBookingMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.unbookable) {\n            $createBooking.val('false');\n            $currentMessage = $unbookableMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.conflictPrebooking) {\n            if (data.canBook) {\n              $createBooking.val(String($bookingSwitchPrebooking[0].checked));\n              $currentMessage = $conflictPrebookingMessage;\n              addCalendarLink($currentMessage);\n            } else if (data.canPrebook) {\n              $createBooking.val(String($prebookingSwitchPrebooking[0].checked));\n              $currentMessage = $conflictPrebookingPrebookMessage;\n              addCalendarLink($currentMessage);\n            } else {\n              $createBooking.val('false');\n              $currentMessage = $cannotBookMessage;\n            }\n          } else if (data.canBook) {\n            $createBooking.val(String($bookingSwitch[0].checked));\n            $currentMessage = $availableMessage;\n          } else if (data.canPrebook) {\n            $createBooking.val(String($prebookingSwitch[0].checked));\n            $currentMessage = $availablePrebookMessage;\n          } else {\n            $createBooking.val('false');\n            $currentMessage = $cannotBookMessage;\n          }\n          $currentMessage.show();\n        },\n      });\n    }\n\n    if (options.checkAvailability) {\n      initAvailabilityValues();\n\n      $('#event-creation-location_data').on('change', function() {\n        roomData = JSON.parse($(this).val());\n        if (previousRoomId !== roomData['room_id']) {\n          previousRoomId = roomData['room_id'];\n          updateAvailability(true);\n        }\n      });\n\n      $('#event-creation-start_dt-datestorage').on('change', function() {\n        const startDate = $(this).val();\n        const startTime = $('#event-creation-start_dt-timestorage').val();\n        const endDate = $('#event-creation-end_dt-datestorage').val();\n        const endTime = $('#event-creation-end_dt-timestorage').val();\n        startDt = moment(`${startDate} ${startTime}`, 'DD/MM/YYYY HH:mm');\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        // workaround for automatic end date update if start date is after end date\n        if (endDt.isBefore(startDt)) {\n          endDt = moment(`${startDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        }\n        updateAvailability();\n      });\n\n      $('#event-creation-start_dt-timestorage').on('change', function() {\n        const startDate = $('#event-creation-start_dt-datestorage').val();\n        const startTime = $('#event-creation-start_dt-timestorage').val();\n        startDt = moment(`${startDate} ${startTime}`, 'DD/MM/YYYY HH:mm');\n        updateAvailability();\n      });\n\n      $('#event-creation-end_dt-datestorage').on('change', function() {\n        const endDate = $(this).val();\n        const endTime = $('#event-creation-end_dt-timestorage').val();\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        updateAvailability();\n      });\n\n      $('#event-creation-end_dt-timestorage').on('change', function() {\n        const endDate = $('#event-creation-end_dt-datestorage').val();\n        const endTime = $(this).val();\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        updateAvailability();\n      });\n\n      $('#event-creation-occurrences').on('change', function() {\n        const occurrences = JSON.parse($(this).val());\n        if (occurrences.length === 1) {\n          setLectureTimes(occurrences[0]);\n          multipleOccurrences = false;\n        } else {\n          multipleOccurrences = true;\n        }\n        updateAvailability();\n      });\n\n      $('#event-creation-timezone').on('change', function() {\n        timezone = $(this).val();\n        updateAvailability();\n      });\n\n      $('#event-creation-category').on('change', function() {\n        category = JSON.parse($(this).val());\n        updateAvailability();\n      });\n\n      $bookingSwitch\n        .add($prebookingSwitch)\n        .add($bookingSwitchPrebooking)\n        .add($prebookingSwitchPrebooking)\n        .on('change', function() {\n          $createBooking.val(String(this.checked));\n        });\n    }\n  };\n})(window);\n"],"names":["window","setupEventCreationDialog","options","$","extend","categoryField","listingValue","protectionModeFields","initialCategory","checkAvailability","rbExcludedCategories","serverDefaultTimezone","messages","parseHTML","html","protectionMessage","class","css","marginTop","listingMessage","eventCreationMessage","$form","closest","$submitBtn","find","first","$createBooking","$availableMessage","$availablePrebookMessage","$conflictBookingMessage","$conflictPrebookingMessage","$conflictPrebookingPrebookMessage","$userBookingMessage","$userPrebookingMessage","$unbookableMessage","$cannotBookMessage","$bookingSwitch","$prebookingSwitch","$bookingSwitchPrebooking","$prebookingSwitchPrebooking","$listingField","previousRoomId","$currentMessage","startDt","endDt","category","roomData","timezone","currentCategory","multipleOccurrences","canCreateInSelectedCategory","canCreateEvents","id","updateSubmitBtn","disabled","param","serializeArray","data","prop","updateProtectionMessage","mode","filter","val","is_protected","elem","text","title","setLectureTimes","occurrence","moment","add","isCategoryExcluded","categoryId","some","excludedCategory","parseInt","addCalendarLink","$message","params","path","date","format","url","rbURL","hideAvailability","resetCheckbox","hide","updateAvailability","isValid","isSame","isSameOrAfter","requestParams","room_id","start_dt","end_dt","ajax","checkRoomAvailabilityURL","method","dataType","contentType","error","handleAjaxError","success","camelizeKeys","userBooking","userPrebooking","conflictBooking","unbookable","conflictPrebooking","canBook","String","checked","canPrebook","show","appendTo","insertAfter","on","evt","cat","toggleClass","JSON","parse","target","value","stringify","trigger","startDate","startTime","endDate","endTime","occurrencesVal","occurrences","length","initAvailabilityValues","this","isBefore"],"sourceRoot":""}