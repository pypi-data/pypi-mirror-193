{"version":3,"file":"js/module_events.persons.55e93ae5.bundle.js","mappings":"krBAmBA,SAASA,EAAT,GAAyF,IAAhE,QAACC,EAAD,OAAUC,EAAV,0BAAkBC,EAAlB,iBAA6CC,GAAmB,EACvF,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GA0B3C,OACE,gCACE,qBACEC,UAAU,mBACVC,MAAOC,EAAAA,GAAAA,OAAiB,2BACxBC,QAAS,IAAML,GAAa,KAE7BD,GACC,gBAAC,EAAAO,mBAAD,CACEV,OAAQA,EACRC,0BAA2BA,EAC3BU,gBAAc,EACdC,QAAS,IAAMR,GAAa,GAC5BS,SArCaC,MAAOC,EAAMC,KAChC,MAAMC,GAAgBC,EAAAA,EAAAA,IAAiBH,EAAMC,GAS7C,IAAIG,EARClB,EAGMgB,EAAcG,kBACvBH,EAAcI,YAAcJ,EAAcG,gBAAgBE,KAAKC,OAC/DN,EAAcO,cAAgBP,EAAcG,gBAAgBK,UACrDR,EAAcG,wBAJdH,EAAcG,gBAOvB,IACED,QAAaO,EAAAA,GAAAA,MACXC,EAAgB,CAACC,SAAU7B,EAAS8B,UAAW7B,EAAOyB,MACtDK,EAAAA,EAAAA,GAAYb,GAIf,CAFC,MAAOc,GACP,OAAOC,EAAAA,EAAAA,IAAkBD,EAC1B,CAED7B,EAAiBiB,EAAKJ,KAAKkB,YACrB,IAAIC,SAAQ,QAAlB,IAqBH,CAEDpC,EAAgBqC,UAAY,CAC1BpC,QAASqC,IAAAA,OAAAA,WACTpC,OAAQoC,IAAAA,OAAAA,WACRnC,0BAA2BmC,IAAAA,KAAAA,WAC3BlC,iBAAkBkC,IAAAA,KAAAA,YAGpBC,OAAOC,qBAAuB,CAACvC,EAASC,EAAQC,KAC9C,MAAMsC,EAAYC,SAASC,cAAe,gBAAezC,EAAOyB,MAOhEiB,EAAAA,OACE,gBAAC5C,EAAD,CACEC,QAASA,EACTC,QAAQ2C,EAAAA,EAAAA,GAAa3C,GACrBC,0BAA2BA,EAC3BC,iBAXqB+B,IACvBS,EAAAA,uBAAgCH,GAEhCK,EAAG,WAAU5C,EAAOyB,MAAMQ,KAAKA,EAA/B,IAUAM,EAPF,C","sources":["webpack:///indico/modules/events/persons/client/js/EditEventPerson.jsx"],"sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2023 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\nimport updatePersonURL from 'indico-url:persons.update_person';\n\nimport PropTypes from 'prop-types';\nimport React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {PersonDetailsModal} from 'indico/react/components';\nimport {getChangedValues, handleSubmitError} from 'indico/react/forms';\nimport {Translate} from 'indico/react/i18n';\nimport {indicoAxios} from 'indico/utils/axios';\nimport {camelizeKeys, snakifyKeys} from 'indico/utils/case';\n\nfunction EditEventPerson({eventId, person, hasPredefinedAffiliations, replacePersonRow}) {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const handleSubmit = async (data, form) => {\n    const changedValues = getChangedValues(data, form);\n    if (!hasPredefinedAffiliations) {\n      // changedValues.affiliation is already there and used\n      delete changedValues.affiliationData;\n    } else if (changedValues.affiliationData) {\n      changedValues.affiliation = changedValues.affiliationData.text.trim();\n      changedValues.affiliationId = changedValues.affiliationData.id;\n      delete changedValues.affiliationData;\n    }\n    let resp;\n    try {\n      resp = await indicoAxios.patch(\n        updatePersonURL({event_id: eventId, person_id: person.id}),\n        snakifyKeys(changedValues)\n      );\n    } catch (e) {\n      return handleSubmitError(e);\n    }\n\n    replacePersonRow(resp.data.html);\n    await new Promise(() => {});\n  };\n\n  return (\n    <>\n      <a\n        className=\"i-link icon-edit\"\n        title={Translate.string('Edit person information')}\n        onClick={() => setModalOpen(true)}\n      />\n      {modalOpen && (\n        <PersonDetailsModal\n          person={person}\n          hasPredefinedAffiliations={hasPredefinedAffiliations}\n          hideEmailField\n          onClose={() => setModalOpen(false)}\n          onSubmit={handleSubmit}\n        />\n      )}\n    </>\n  );\n}\n\nEditEventPerson.propTypes = {\n  eventId: PropTypes.number.isRequired,\n  person: PropTypes.object.isRequired,\n  hasPredefinedAffiliations: PropTypes.bool.isRequired,\n  replacePersonRow: PropTypes.func.isRequired,\n};\n\nwindow.setupEditEventPerson = (eventId, person, hasPredefinedAffiliations) => {\n  const container = document.querySelector(`#edit-person-${person.id}`);\n  const replacePersonRow = html => {\n    ReactDOM.unmountComponentAtNode(container);\n    // sorry for using jquery here, but it's the most convenient way to execute inline JS..\n    $(`#person-${person.id}`).html(html);\n  };\n\n  ReactDOM.render(\n    <EditEventPerson\n      eventId={eventId}\n      person={camelizeKeys(person)}\n      hasPredefinedAffiliations={hasPredefinedAffiliations}\n      replacePersonRow={replacePersonRow}\n    />,\n    container\n  );\n};\n"],"names":["EditEventPerson","eventId","person","hasPredefinedAffiliations","replacePersonRow","modalOpen","setModalOpen","useState","className","title","Translate","onClick","PersonDetailsModal","hideEmailField","onClose","onSubmit","async","data","form","changedValues","getChangedValues","resp","affiliationData","affiliation","text","trim","affiliationId","id","indicoAxios","updatePersonURL","event_id","person_id","snakifyKeys","e","handleSubmitError","html","Promise","propTypes","PropTypes","window","setupEditEventPerson","container","document","querySelector","ReactDOM","camelizeKeys","$"],"sourceRoot":""}