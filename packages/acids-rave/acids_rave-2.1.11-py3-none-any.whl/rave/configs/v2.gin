from __gin__ import dynamic_registration

import rave
from rave import core
from rave import blocks
from rave import discriminator
from rave import balancer

import torch.nn as nn

include "configs/v1.gin"

KERNEL_SIZE = 3
DILATIONS = [1, 3, 9]
CAPACITY = 96

core.AudioDistanceV1.log_epsilon = 1

# ENCODER
blocks.EncoderV2:
    data_size = %N_BAND
    capacity = %CAPACITY
    ratios = %RATIOS
    latent_size = %LATENT_SIZE
    n_out = 2
    kernel_size = %KERNEL_SIZE
    dilations = %DILATIONS

blocks.VariationalEncoder:
    encoder = @variational/blocks.EncoderV2

# GENERATOR
blocks.GeneratorV2:
    data_size = %N_BAND
    capacity = %CAPACITY
    ratios = %RATIOS
    latent_size = %LATENT_SIZE
    kernel_size = %KERNEL_SIZE
    dilations = %DILATIONS
    amplitude_modulation = True

# DISCRIMINATOR
periods/discriminator.ConvNet:
    conv = @nn.Conv2d
    kernel_size = (5, 1)

spectral/discriminator.ConvNet:
    conv = @nn.Conv2d
    kernel_size = 5
    in_size = 2

discriminator.MultiPeriodDiscriminator:
    periods = [2, 3, 5, 7, 11]
    convnet = @periods/discriminator.ConvNet

discriminator.CombineDiscriminators:
    discriminators = [
        @discriminator.MultiPeriodDiscriminator,
        @discriminator.MultiScaleDiscriminator
    ]

feature_matching/core.mean_difference:
    relative = True

# BALANCER
balancer.Balancer:
    weights = {
        'feature_matching' : 20,
        'regularization': .1,
    }
    scale_gradients = False

# RAVE
rave.RAVE:
    discriminator = @discriminator.CombineDiscriminators
    valid_signal_crop = True
    num_skipped_features = 1
    decoder = @blocks.GeneratorV2
    update_discriminator_every = 4
    
