{"version":3,"file":"lib_index_js.830d5ec51a23a5285275.js","mappings":"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","sources":["webpack://jupyterlab_daisy/./src/handler.ts","webpack://jupyterlab_daisy/./src/index.ts"],"sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\n\nimport { ServerConnection } from '@jupyterlab/services';\n\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI<T>(\n  endPoint = '',\n  init: RequestInit = {}\n): Promise<T> {\n  // Make request to Jupyter API\n  const settings = ServerConnection.makeSettings();\n  const requestUrl = URLExt.join(\n    settings.baseUrl,\n    'jupyterlab-daisy', // API Namespace\n    endPoint\n  );\n\n  let response: Response;\n  try {\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    throw new ServerConnection.NetworkError(error);\n  }\n\n  let data: any = await response.text();\n\n  if (data.length > 0) {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      console.log('Not a JSON response body.', response);\n    }\n  }\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message || data);\n  }\n\n  return data;\n}\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { DocumentRegistry } from '@jupyterlab/docregistry';\nimport { INotebookModel, NotebookPanel, INotebookTracker } from '@jupyterlab/notebook';\nimport { CodeMirrorEditor } from '@jupyterlab/codemirror';\nimport { ToolbarButton, ICommandPalette } from '@jupyterlab/apputils';\nimport { paletteIcon } from '@jupyterlab/ui-components';\n\nimport { Panel } from '@lumino/widgets';\nimport { IDisposable } from '@lumino/disposable';\n\nimport { requestAPI } from './handler';\n\n\n\n// TODO: Should probably split sidebar logic/layout from button class\nclass ButtonExtension\n  implements DocumentRegistry.IWidgetExtension<NotebookPanel, INotebookModel>\n{\n  app: JupyterFrontEnd;\n  tracker: INotebookTracker;\n  sidebar?: Panel = undefined;\n  editor?: CodeMirrorEditor = undefined;\n  daisy_address: string = \"\";\n\n  constructor(app: JupyterFrontEnd, tracker: INotebookTracker) {\n    this.app = app;\n    this.tracker = tracker;\n  }\n\n  // Closes the sidebar and replaces the selected text\n  // TODO: If the user modifies the selection, the sidebar should also close\n  closeAndReplace(\n    ev: MouseEvent,\n    sidebar?: Panel\n  ): void {\n    sidebar?.close();\n    let chosen = (ev.target as Element).textContent ?? '';\n    this.editor?.replaceSelection(`${chosen}`);\n  }\n\n  setDaisyAddress(daisy_address: string): void {\n      this.daisy_address = daisy_address;\n  }\n\n\n  populateList(asset_name: string, list: HTMLElement): void {\n            while (list.firstChild != null) {\n              list.removeChild(list.firstChild);\n            }\n            requestAPI<any>(`get-joinable?asset_id=${asset_name}`)\n            .then(json => {\n                  json['JoinableTables'].forEach(\n                    (entry: {\n                      table_path: string;\n                      matches: Record<string, Record<string, string>>[];\n                    }) => {\n                      const bla = document.createElement('li');\n                      bla.setAttribute(\n                        'title',\n                        `Matched ${entry.matches.length} columns, click '+' for details...`\n                      );\n                      const button = document.createElement('button');\n                      button.className = 'my-button';\n                      button.textContent = '+';\n                      const text = document.createElement('p');\n                      text.textContent = entry.table_path.split('/')[0];\n                      text.className = 'my-list-item-text';\n                      const tableContainer = document.createElement('div');\n                      const table = document.createElement('table');\n                      table.setAttribute('style', 'width: 100%;');\n                      tableContainer.className =\n                        'my-column-table-div-collapsed';\n                      tableContainer.setAttribute('style', 'height: 0px');\n\n                      tableContainer.appendChild(table);\n                      bla.appendChild(button);\n                      bla.appendChild(text);\n                      bla.appendChild(tableContainer);\n                      bla.className = 'my-list-item';\n                      const tableHeader = document.createElement('tr');\n                      tableHeader.innerHTML = `\n                    <th>Column Name</th>\n                    <th align=\"right\">COMA Score</th>\n                    `;\n                      table.appendChild(tableHeader);\n                      entry.matches.forEach(match => {\n                        const tr = document.createElement('tr');\n                        tr.innerHTML = `\n                        <td>${match['PK']['from_id']}</td>\n                        <td class='alnright'>${match['RELATED']['coma']}</td>\n                      `;\n                        table.appendChild(tr);\n                      });\n\n                      button.onclick = () => {\n                        if (\n                          tableContainer.className === 'my-column-table-div'\n                        ) {\n                          tableContainer.className =\n                            'my-column-table-div-collapsed';\n                          button.className = 'my-button';\n                          button.textContent = '+';\n                          tableContainer.setAttribute('style', 'height: 0px');\n                        } else {\n                          tableContainer.className = 'my-column-table-div';\n                          button.className = 'my-button-toggled';\n                          button.textContent = '-';\n                          tableContainer.setAttribute(\n                            'style',\n                            `height: ${table.clientHeight}px`\n                          );\n                        }\n                      };\n                      text.onclick = ev =>\n                        this.closeAndReplace(ev, this.sidebar);\n                      list.appendChild(bla);\n                    }\n                  );\n                })\n            .catch(reason => {console.error('AEUHHH????', reason);});\n  }\n\n\n  createNew(\n    panel: NotebookPanel,\n    context: DocumentRegistry.IContext<INotebookModel>\n  ): IDisposable {\n    const mybutton = new ToolbarButton({\n      icon: paletteIcon,\n      tooltip: \"Augment Data\",\n      onClick: () => {\n        this.sidebar?.close();\n\n        const activeCell = this.tracker.activeCell;\n        if (activeCell !== null) {\n          this.editor = activeCell.editor as CodeMirrorEditor;\n          let value = this.editor.getRange(\n            this.editor.getCursor('start'),\n            this.editor.getCursor('end')\n          );\n\n\n          this.sidebar = new Panel();\n          this.sidebar.addClass('my-panel');\n          this.sidebar.id = 'daisy-jupyterlab';\n          this.sidebar.title.icon = paletteIcon;\n          this.app.shell.add(this.sidebar, 'right', { rank: 50000 });\n          this.app.shell.activateById(this.sidebar.id);\n\n          const header = document.createElement('h1');\n          header.textContent = 'Related Datasets';\n\n          const form = document.createElement('form');\n          const inp = document.createElement('input')\n          inp.type = \"text\"\n          inp.name = \"name\"\n          inp.value = value\n          inp.className = 'my-highlighted-item';\n\n\n\n          const list = document.createElement('ul');\n          list.className = 'my-list';\n\n          form.appendChild(inp); \n          const temp = this;\n          form.onsubmit = function(event) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            // TODO: Split off population of bar to other function\n            // populateList(event.)\n            const name = form.elements[0] as HTMLInputElement;\n            console.log(name.value)\n            temp.populateList(name.value, list)\n          }\n\n          this.sidebar?.node.appendChild(header);\n          this.sidebar?.node.appendChild(form);\n          this.sidebar?.node.appendChild(list);\n\n          this.populateList(value, list);\n        \n        }\n      }\n    });\n\n    // Add the toolbar button to the notebook toolbar\n    panel.toolbar.insertItem(10, 'mybutton', mybutton);\n\n    return mybutton;\n  }\n}\n\n\n/**\n * Initialization data for the jupyterlab_daisy extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab_daisy:plugin',\n  autoStart: true,\n  optional: [ISettingRegistry, ICommandPalette, INotebookTracker],\n  activate: (\n    app: JupyterFrontEnd, \n    settingRegistry: ISettingRegistry | null,\n    palette: ICommandPalette,\n    tracker: INotebookTracker) => {\n    console.log('JupyterLab extension jupyterlab_daisy is activated!');\n\n    if (settingRegistry) {\n      settingRegistry\n        .load(plugin.id)\n        .then(settings => {\n          console.log('jupyterlab_daisy settings loaded:', settings.composite);\n        })\n        .catch(reason => {\n          console.error('Failed to load settings for jupyterlab_daisy.', reason);\n        });\n    }\n\n    const button = new ButtonExtension(app, tracker);\n    app.docRegistry.addWidgetExtension('Notebook', button);\n  }\n};\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}