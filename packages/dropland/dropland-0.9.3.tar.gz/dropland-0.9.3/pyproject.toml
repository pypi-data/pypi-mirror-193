[tool.poetry]
name = "dropland"
version = "0.9.3"
description = "Mini-framework for building a backend servers for web-services using SQLAlchemy, Databases, Redis, RabbitMQ and APScheduler"
license = "MIT"
readme = "README.md"
repository = "https://gitlab.com/thegamma/dropland"
keywords = ["orm", "databases", "sqlalchemy", "rabbitmq", "apscheduler", "fastapi"]
authors = ["Max Plutonium <plutonium.max@gmail.com>"]
maintainers = ["Max Plutonium <plutonium.max@gmail.com>"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

packages = [
    { include = "dropland" },
]

include = [
    { path = "LICENSE" },
]

[tool.poetry.dependencies]
python = "^3.9"
SQLAlchemy-Utils = ">=0.37.2,<0.38.0"
contextvars = ">=2.4,<3.0"
dependency-injector = {version = ">=4.40.0", extras = ["pydantic"]}
pydantic = {version = ">=1.8.2,<2.0.0", extras = ["dotenv", "email"]}
pytz = ">=2021.3,<2022.0"
timeparse-plus = ">=1.2.0,<2.0.0"
poetry-version = "^0.2.0"
tomlkit = "<0.6.0"
orjson = "^3.8.1"

SQLAlchemy = {version = "^1.4", extras = ["asyncio", "mypy"], optional = true}
alembic = {version = "^1.8.0", optional = true}
databases = {version = "0.7.0", optional = true}
aiosqlite = {version = ">=0.17.0,<0.18.0", optional = true}
asyncpg = {version = ">=0.27.0", optional = true}
psycopg2 = {version = ">=2.8.6,<3.0.0", optional = true}
aiomysql = {version = ">=0.0.21", optional = true}
pymysql = {version = ">=0.9,<=0.9.3", extras = ["rsa"], optional = true}
aioredis = {version = "<=1.3.1", extras = ["hiredis"], optional = true}
redis = {version = ">=4.1.0", optional = true}
aio-pika = {version = ">=8.2.0", optional = true}
APScheduler = {version = ">=3.7.0", optional = true}
rpyc = {version = ">=5.1.0", optional = true}
fastapi = {extras = ["all"], version = ">=0.85.0"}
elasticsearch = {extras = ["async"], version = "^7.17.7", optional = true}

[tool.poetry.extras]
sqla = ["SQLAlchemy", "alembic"]
db = ["databases", "alembic"]
sqlite = ["aiosqlite"]
pg = ["asyncpg", "psycopg2"]
mysql = ["aiomysql", "pymysql"]
redis = ["aioredis", "redis"]
rmq = ["aio-pika"]
elasticsearch = ["elasticsearch"]
scheduler = ["APScheduler", "rpyc"]
fastapi = ["fastapi"]

[tool.poetry.dev-dependencies]
pytest = "^7.1.0"
pytest-asyncio = "^0.20.0"
pytest-cov = "^4.0"
pytest-mock = "^3.10.0"
autoflake = "^1.7"
black = "^22.10"
flake8 = "^5.0"
isort = "^5.10"
mypy = "^0.982"
pre-commit = "^2.20"
requests = "^2.28"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
