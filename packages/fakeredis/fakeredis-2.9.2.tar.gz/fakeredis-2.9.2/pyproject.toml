[build-system]
requires = ["poetry_core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "fakeredis"
packages = [
    { include = "fakeredis" },
]
version = "2.9.2"
description = "Fake implementation of redis API for testing purposes."
readme = "README.md"
keywords = ["redis", "rq", "django-rq", "RedisJson", ]
authors = [
    "Daniel Moran <daniel.maruani@gmail.com>",
    "Bruce Merry <bmerry@ska.ac.za>",
    "James Saryerwinnie <js@jamesls.com>",
]
maintainers = [
    "Daniel Moran <daniel.maruani@gmail.com>",
]
license = "BSD-3-Clause"
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Development Status :: 6 - Mature',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Software Development :: Libraries :: Python Modules',
]
homepage = "https://github.com/cunla/fakeredis-py"
repository = "https://github.com/cunla/fakeredis-py"

[tool.poetry.dependencies]
python = "^3.8"
redis = "^4"
sortedcontainers = "^2.4"
lupa = { version = "^1.14", optional = true }
jsonpath-ng = { version = "^1.5", optional = true }

[tool.poetry.extras]
lua = ["lupa"]
json = ["jsonpath-ng"]

[tool.poetry.dev-dependencies]
invoke = "^1.7"
hypothesis = "^6.56"
coverage = "^7"
pytest = "^7.2"
pytest-asyncio = "^0.20"
pytest-cov = "^4.0"
pytest-mock = "^3.10"
flake8 = { version = "^6.0", python = ">=3.8.1" }
mypy = "^0.991"
types-redis = "^4"
twine = "^4.0" # Upload to pypi
tox = "^4.2.6"
tox-docker = "^4.0.0a2"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/cunla/fakeredis-py/issues"
"Funding" = "https://github.com/sponsors/cunla"


[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "fake: run tests only with fake redis",
    "real: run tests with a locally running real Redis server",
    "disconnected",
    "min_server",
    "max_server",
    "decode_responses",
]
asyncio_mode = "strict"

[tool.mypy]
files = [
    "fakeredis/**/*.py",
    "test/**/*.py",
]
packages = ['fakeredis', ]
follow_imports = "silent"
ignore_missing_imports = true
scripts_are_modules = true